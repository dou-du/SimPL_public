-- MariaDB dump 10.17  Distrib 10.4.12-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: simpl
-- ------------------------------------------------------
-- Server version	10.4.12-MariaDB-1:10.4.12+maria~bionic

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `simpl`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `simpl` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;

USE `simpl`;

--
-- Table structure for table `password_resets`
--

DROP TABLE IF EXISTS `password_resets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `password_resets` (
  `email` varchar(255) NOT NULL,
  `token` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  KEY `password_resets_email_index` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `password_resets`
--

LOCK TABLES `password_resets` WRITE;
/*!40000 ALTER TABLE `password_resets` DISABLE KEYS */;
/*!40000 ALTER TABLE `password_resets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `policies`
--

DROP TABLE IF EXISTS `policies`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `policies` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `type` varchar(255) NOT NULL,
  `job_submit` tinyint(4) NOT NULL DEFAULT 0,
  `own_data_create` tinyint(4) NOT NULL DEFAULT 0,
  `own_data_read` tinyint(4) NOT NULL DEFAULT 0,
  `own_data_update` tinyint(4) NOT NULL DEFAULT 0,
  `own_data_delete` tinyint(4) NOT NULL DEFAULT 0,
  `oth_data_read` tinyint(4) NOT NULL DEFAULT 0,
  `oth_data_update` tinyint(4) NOT NULL DEFAULT 0,
  `oth_data_delete` tinyint(4) NOT NULL DEFAULT 0,
  `oth_user_read` tinyint(4) NOT NULL DEFAULT 0,
  `oth_user_update` tinyint(4) NOT NULL DEFAULT 0,
  `oth_user_delete` tinyint(4) NOT NULL DEFAULT 0,
  `policy_admin` tinyint(4) NOT NULL DEFAULT 0,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `policies_type_unique` (`type`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `policies`
--

LOCK TABLES `policies` WRITE;
/*!40000 ALTER TABLE `policies` DISABLE KEYS */;
INSERT INTO `policies` VALUES (1,'admin',1,1,1,1,1,1,1,1,1,1,1,1,'2017-12-04 03:08:37','2017-12-04 23:58:59'),(2,'editor',1,1,1,1,1,1,0,0,0,0,0,0,'2017-12-04 03:45:29','2017-12-06 01:03:50'),(3,'user',1,1,1,1,1,1,0,0,0,0,0,0,'2017-12-04 03:49:03','2017-12-06 21:17:42'),(4,'anonymous',0,0,0,0,0,0,0,0,0,0,0,0,'2017-12-04 03:49:36','2017-12-04 03:49:36');
/*!40000 ALTER TABLE `policies` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `repositories`
--

DROP TABLE IF EXISTS `repositories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `repositories` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `owner` int(11) NOT NULL,
  `alias` varchar(255) NOT NULL,
  `filename` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `path` varchar(255) DEFAULT NULL,
  `author` int(11) NOT NULL,
  `ispublic` tinyint(4) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `repositories`
--

LOCK TABLES `repositories` WRITE;
/*!40000 ALTER TABLE `repositories` DISABLE KEYS */;
INSERT INTO `repositories` VALUES (3,1,'sample/cms.png','/web/KULWzpbgp6SKwPYm6xWJp4Co85NP6nC3ojOQ5yRT.png','2019-08-16 01:56:55','2019-08-16 01:57:11',NULL,1,0),(4,1,'sample/Page.png','/web/0G6DSZM2F4v9UUZssEzx0dk9v3XzavPSu890E4pp.png','2019-08-16 01:56:55','2019-08-16 01:57:14',NULL,1,0),(5,1,'sample/Plug-in.png','/web/RYkF99AY3N05abLonfGEiQV3WgPkUrAlOw9ZHCiA.png','2019-08-16 01:56:55','2019-08-16 01:57:18',NULL,1,0),(6,1,'sample/vlatoms.png','/web/6lzWBhvr7RoZOMoKl5mJZhgtof4U2OGjunGlJVwM.png','2019-08-16 01:56:55','2019-08-16 01:57:20',NULL,1,0),(8,0,'sample/repo_sample.txt','/server/5bxZR0aKFfPLot5BBk1QOxIn9wyUHsuzR5MqaNyF.txt','2019-08-16 01:56:59','2019-08-16 01:57:43',NULL,1,0),(9,1,'sample/simpl_logo.png','/web/RHJZH34go3tkJ7S341Eepol7awLqEF00vRIuYkTt.png','2019-08-16 03:52:58','2019-08-16 03:53:09',NULL,1,0),(10,1,'sample/Manipulator/change.png','/web/W6I9QZu3mnonSWvOJT3TUy2WBYLur6y2oWTJbES1.png','2020-03-15 22:28:24','2020-03-15 22:29:53',NULL,1,0),(11,1,'sample/Manipulator/circular.png','/web/RUgOUvazwJRrU1G3EhpZGXzShVpvOg9kPJVLRao1.png','2020-03-15 22:28:24','2020-03-15 22:30:00',NULL,1,0),(12,1,'sample/Manipulator/cleave.png','/web/Gm4HwiQSJ5wWDQTvZQ3UlSTlrzPV4fK5opBmFYTZ.png','2020-03-15 22:28:24','2020-03-15 22:30:06',NULL,1,0),(13,1,'sample/Manipulator/clone.png','/web/FjQqkQup06Rh07AmaKzn4WD3zdXUqiP6fMotrQDt.png','2020-03-15 22:28:24','2020-03-15 22:30:09',NULL,1,0),(14,1,'sample/Manipulator/edit.png','/web/3PhlOgXvvlNiXD2G1twi5VwxWUIX4453sZOuyeIW.png','2020-03-15 22:28:24','2020-03-15 22:30:14',NULL,1,0),(15,1,'sample/Manipulator/element.png','/web/GBIQcYZKeTebtKjQbyrKfap9JjmS4YK1nnTsZ0P2.png','2020-03-15 22:28:24','2020-03-15 22:30:18',NULL,1,0),(16,1,'sample/Manipulator/move_rotate.png','/web/nGDUkTRkkLIktc2JxThBWvISDl3TXelUgA4lgx0K.png','2020-03-15 22:28:24','2020-03-15 22:30:21',NULL,1,0),(17,1,'sample/Manipulator/ms_add_atom.png','/web/v23nTzM3pvAPllIcTefQ9S0Zrsp6U6laimzwErzD.png','2020-03-15 22:28:24','2020-03-15 22:30:24',NULL,1,0),(18,1,'sample/Manipulator/rectangular.png','/web/SmLDQZwq9A6rUNHKWrHKM1jDw3Zyyai0xF6L7VYJ.png','2020-03-15 22:28:24','2020-03-15 22:30:28',NULL,1,0),(19,1,'sample/Manipulator/singleatom.png','/web/mwFTGhL4WUSyc21n0jfDviaX3KlPPvTMB0lYrk7U.png','2020-03-15 22:28:24','2020-03-15 22:30:31',NULL,1,0),(20,1,'sample/Manipulator/sphere.png','/web/loSORdQprpjVGyYruMI2aJ4E4dIvimOvIHUzGyLF.png','2020-03-15 22:28:24','2020-03-15 22:30:36',NULL,1,0),(21,1,'sample/Manipulator/strain.png','/web/nhVr1LIYDtSVKZ7n9WyplTzrF7IXkkli4b83MRU0.png','2020-03-15 22:28:24','2020-03-15 22:30:39',NULL,1,0),(22,1,'sample/Manipulator/vacuum.png','/web/RhO4QtYT7ANfT1LKBd0r9TxGby7Gyh9wBSp57Tk9.png','2020-03-15 22:28:24','2020-03-15 22:30:44',NULL,1,0),(23,1,'sample/Manipulator/addatom.png','/web/9Q7iyPGQRd3hhsDS5fgBsIjTYjSVVuqabyb5Ovgm.png','2020-03-15 22:28:24','2020-03-15 22:30:48',NULL,1,0),(24,1,'sample/Manipulator/merge.png','/web/BqdINwI16ASkky2KpeYKvbVMBfDoWVhkNBwdcj37.png','2020-05-03 17:23:51','2020-05-03 17:24:41',NULL,1,0),(25,1,'sample/Manipulator/crystal.png','/web/apvjM1d3TmSYs17pC5JRNUc8JNqEdf3Q9h0RStC1.png','2020-05-03 17:24:07','2020-05-03 17:24:44',NULL,1,0),(26,1,'sample/Manipulator/hexagon.png','/web/wdE5fkJAvnN2sd2qugXb9w0Xc8Bx0LA0Cv1ISPbD.png','2020-05-03 17:24:26','2020-05-03 17:24:47',NULL,1,0);
/*!40000 ALTER TABLE `repositories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `affiliation` varchar(255) DEFAULT NULL,
  `tel` varchar(255) DEFAULT NULL,
  `phone` varchar(255) DEFAULT NULL,
  `verification_code` varchar(255) DEFAULT NULL,
  `verified` tinyint(4) NOT NULL DEFAULT 0,
  `password` varchar(255) NOT NULL,
  `remember_token` varchar(100) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `policy` varchar(255) NOT NULL DEFAULT 'user',
  `mypic` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_email_unique` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `vcms_env`
--

DROP TABLE IF EXISTS `vcms_env`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vcms_env` (
  `var_key` varchar(255) NOT NULL,
  `var_value` longtext NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `vcms_env`
--

LOCK TABLES `vcms_env` WRITE;
/*!40000 ALTER TABLE `vcms_env` DISABLE KEYS */;
/*!40000 ALTER TABLE `vcms_env` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `vcms_job`
--

DROP TABLE IF EXISTS `vcms_job`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vcms_job` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `parent` int(11) DEFAULT NULL,
  `project` int(11) DEFAULT NULL,
  `owner` int(11) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `qinfo` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `jobdir` varchar(255) DEFAULT NULL,
  `status` varchar(32) DEFAULT NULL,
  `pluginId` int(11) DEFAULT NULL,
  `jobBefore` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `jobNext` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `input` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `output` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `name` text DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `vcms_job`
--

LOCK TABLES `vcms_job` WRITE;
/*!40000 ALTER TABLE `vcms_job` DISABLE KEYS */;
/*!40000 ALTER TABLE `vcms_job` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `vcms_pages`
--

DROP TABLE IF EXISTS `vcms_pages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vcms_pages` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` text NOT NULL,
  `alias` text NOT NULL,
  `contents` longtext NOT NULL,
  `created` datetime NOT NULL,
  `isfront` tinyint(1) DEFAULT 0,
  `ispublic` tinyint(1) DEFAULT 0,
  `author` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `vcms_pages`
--

LOCK TABLES `vcms_pages` WRITE;
/*!40000 ALTER TABLE `vcms_pages` DISABLE KEYS */;
INSERT INTO `vcms_pages` VALUES (1,'About SimPL','about_simpl','{{kCMS|PAGE|sample_nav}}\n<style>\n  .about_content{\n    font-family:Roboto;\n    font-weight:100;\n    font-size:18px;\n  }\n  #about_logo{\n    opacity:1;\n  }\n  #plugin_logo{\n    opacity:0.5;\n  }\n  #page_logo{\n    opacity:0.5;\n  }\n  #visualizer_logo{\n    opacity:0.5;\n  }\n  #tutorial_logo{\n    opacity:0.5;\n  }\n</style>\n<div class=scontainer>\n  <!--  <div class=pageTitle>About</div> -->\n  <div class=pageContent style=\"overflow-y:hidden;display:inline-flex\">\n    {{kCMS|PAGE|about_left_bar}}\n    <div class=col-xs-9 style=\'border-left:solid 2px;padding-left:40px;\'>\n      <img src=\"repo/sample/cms.png\">\n      <h3>\'Sim\'ulaton \'Pl\'atform Creator\n      </h3>\n      <p class=\"about_content\">\n        <strong>\'SimPL\'\n        </strong> is a Content Management System for Simulation Platforms.\n      </p>\n      <h3>The objectives of SimPL are :\n      </h3>\n      <p class=\"about_content\">- To provide researcher-friendly(not developer-friendly) development environments\n        <br/>\n        - To spread researcher\'s precious knowledge(include code, know-how and pre/post processing skills\n        <br/>\n        - To generate research bigdata for diverse field of research\n      </p>\n      <h3>In SimPL, \n      </h3>\n      <p class=\"about_content\">- You can create your own simulation platform customized for you with functions what you want .\n        <br/>\n        - You can do modeling, calculation, and analysis in one platform.\n        <br/>\n        - Your platform development process will be very simple.\n        <br/>\n        - You can easily import platforms shared by others and create new platforms or add functions to your platform.\n      </p>\n      <h3>There are 2 key components of SimPL\n      </h3>\n      <p class=\"about_content\">1) Pages\n        <br>\n        \"Page\" is a web page which consists of standard web elements(images, texts, links, input form...) and SimPL web components.\n        <br>\n        2) Plugins\n        <br>\n        \"Plugin\" is a small program which connects back-end elements(such as solver, linux server,...) to Pages.\n        <br>\n        Currently, Plugins are written in Python(2.7.3) and we\'re planing to give more options to SimPL Creators.\n      </p>\n      <h3>Other components\n      </h3>\n      <p class=\"about_content\">1) Preset\n        <br>\n        - User\'s Info\n        <br>\n        [Your-url]/preset/myInfo\n        <br>\n        - Javascript Functions\n        <br>\n        <code>kCms.callPlugin(\"pluginAlias\",data={\"input data\"}, callback=function(ret){...});\n        </code>\n        <br>\n        <code>kCms.uploadFile(\"repos for(web or server)\", files, callback=function(ret){...});\n        </code>\n        <br>\n        <code>kCms.downloadFile(\"repos for(web or server)\", [\"list of the alias\"]);\n        </code>\n      </p>\n      <p class=\"about_content\">2) Jobs\n        <br>\n        Job is the place to store something in SimPL. It is structured to store any data. You can store and load data by the plugin built-in functions saveJobs and getJobs.\n        <br>\n        - Job table structure\n        <br>\n      </p>\n      <table class=table>\n        <thead>\n          <tr>\n            <th>Column\n            </th>\n            <th>Type\n            </th>\n            <th>Default\n            </th>\n            <th>Remarks\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>id\n            </td>\n            <td>unsigned int(10)\n            </td>\n            <td>not nullable(auto-increment)\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>parent\n            </td>\n            <td>int(11)\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>project\n            </td>\n            <td>int(11)\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>owner\n            </td>\n            <td>int(11)\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>type\n            </td>\n            <td>varchar(255)\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>qinfo\n            </td>\n            <td>longtext\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>jobdir\n            </td>\n            <td>varchar(255)\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>status\n            </td>\n            <td>varchar(32)\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>pluginId\n            </td>\n            <td>int(11)\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>jobBefore\n            </td>\n            <td>longtext\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>jobNext\n            </td>\n            <td>longtext\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>input\n            </td>\n            <td>longtext\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>output\n            </td>\n            <td>longtext\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>name\n            </td>\n            <td>text\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>created_at\n            </td>\n            <td>timestamp\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n          <tr>\n            <td>updated_at\n            </td>\n            <td>timestamp\n            </td>\n            <td>nullable\n            </td>\n            <td>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <p class=\"about_content\">3) Repository\n        <br>\n        - You can upload files for \"web\" and \"server\".\n        <br>\n        - In \"Repository for Web\", you can usually upload a picture files and include them your page like \n        <br>\n        <code>\n          < img src=\"repo/alias of file\">\n        </code>\n        <br>\n        - Files to be used by the plugin are uploaded to \"Repository for Server\". They can be read with the plugin built-in function getRepo.\n      </p>\n    </div>\n  </div>\n</div>','2019-08-16 04:43:18',1,1,1),(2,'sample/SimPL Default navigation bar','sample_nav','<div class=simpl_default_nav style=\'background-color:black;color:white;text-align:right;padding:15px;margin-bottom:15px;height:50px\'>\n  <a href=/admin style=\"color:white;margin-right:15px;display:none\" id=admin_link target=_blank>\n    <i class=\"fas fa-cog\">\n    </i> Admin\n  </a>\n  <a style=\"color:white;display:none\" href=/logout id=logout_link>\n    <i class=\"fas fa-sign-out-alt\">\n    </i> Logout\n  </a>\n  <a style=\"color:white;display:none\" href=/login id=login_link>\n    <i class=\"fas fa-sign-in-alt\">\n    </i> Login\n  </a>\n</div>\n<script>\n  $(document).ready(function(){\n    kCms.callPlugin(\"simpl_ex_getmyinfo\",{\n    },function(ret){\n      console.log(ret);\n      var output=JSON.parse(ret.output);\n      if(output.id==-1){\n        $(\"#login_link\").show();\n        $(\"#logout_link\").hide();\n      }\n      else{\n        $(\"#login_link\").hide();\n        $(\"#logout_link\").show();\n      }\n      if(output.policy==\"admin\" || output.policy==\"editor\"){\n        $(\"#admin_link\").show();\n      }\n      else{\n        $(\"#admin_link\").hide();\n      }\n    });\n  });\n</script>','2019-08-16 04:43:22',0,1,1),(3,'sample/About Page','about_page','{{kCMS|PAGE|sample_nav}}\n<style>\n  .about_content{\n  font-family:Roboto;\n  font-weight:100;\n    font-size:18px;\n  }\n    #about_logo{\n   opacity:0.5; \n  }\n  #plugin_logo{\n   opacity:0.5;\n  }\n  #page_logo{\n   opacity:1;\n  }\n  #visualizer_logo{\n   opacity:0.5;\n  }\n</style>\n<div class=scontainer>\n<!--  <div class=pageTitle>About Page</div> -->\n  <div class=pageContent style=\"overflow-y:hidden;display:inline-flex\">\n{{kCMS|PAGE|about_left_bar}}\n    <div style=\'border-left:solid 2px;padding-left:40px;padding-right:15px\'>\n      <h2 id=\"page_section\">Page</h2>\n      <p class=\"about_content\">As described in the introduction section, \"Page\" is a specialized html page for simulation platform. You can use typical html tags such as table, div, font,.. and SimPL Web Components to make your \"Page\". \"Page\" usually consist of CSS(Design), HTML(Body), Javascript(Funtions).<br></p>\n      <h3>Make Page</h3>\n      <p class=\"about_content\">There are two ways to create a page. The first is \"Script\". You can write CSS, HTML and Javascript here. Next is WYSIWYG Editor. You can easily edit HTML to create layouts.</p>\n      <h3>VLATOMS : Javascript Atomic Visualizer</h3>\n      <p class=\"about_content\">VLAtoms is web based atomic visualizer. VLAtoms is written by Javascipt and using web-standard components such as Canvas, WebGL and Javascript.<br>\n      Thus, Most of modern web brower supports VLAtoms without any plugins.<br>\n      You can include VLAtoms into your page with a tag below.<br>\n      <code>{ { kCMS|VLATOMS|vla|width:500,height:500} } (remove space between { and { )</code><br>\n      Here, vla is a name of VLatoms which is used in javascript functions or other page components.<br></p>\n      \n            <div style=\'width:500px;height:500px;\'>\n        {{kCMS|VLATOMS|vla|width:500,height:500}} \n        <script>\n          $(document).ready(function(){\n          vla.Structure={\n          a:[5,0,0],\n          b:[0,5,0],\n          c:[0,0,5],\n          atoms:[]\n          }\n          vla.Structure.atoms.push( new VLatoms.Atom(2.5,2.5,2.5,\"Si\"));\n          vla.update.atomsChanged=true;\n          vla.update.bondsChanged=true;\n          vla.setOptimalCamPosition()\n          });\n        </script>\n      </div>\n      <p class=\"about_content\"><a href=\"/about_vls\">Detail</a></p>\n      <h3>Include Page into other Page</h3>\n      <p class=\"about_content\">You can make a page by combination of other pages by code below:<br>\n      <code>{ { kCMS|PAGE|alias } }</code><br>\n      \"alias\" is an alias of other page defined in the page editor<br></p>\n      <h3>Call a plugin using Javascript</h3>\n      <p class=\"about_content\">You can connect your page with \"Plugin\" by SimPL JS API. Basically, SimPL JS API is a wrapper of $.ajax function of jQuery.<br>\n      Javascript Function<br>\n      <code>kCMS.callPlugin( [plugin alias], data, [callback function]);</code> will call a plugin by alias with given data, and callback function will be launched when plugin execution is done.<br>\n      In example,<br>\n      <code>kCMS.callPlugin(\'hellosimpl\',{\'name\':\'SimPL\'},function(ret){alert(ret);});</code> will make alert message \"Hello SimPL\".<br>\n      <a href=\"javascript:;\" onclick=\'pluginTest();\'>Click here to call plugin!</a><br>\n      <script>\n        function pluginTest(){\n        kCMS.callPlugin(\'hellosimpl\',{\'name\':\'SimPL\'},function(ret){alert(ret.output);});\n        }\n      </script></p>\n      <h3>Get from simpl.vfab.org</h3>\n      <p class=\"about_content\">You can import the necessary page from the SimPL main repository. You can add that page to your SimPL in a simple way by clicking on the Get SimPL button on the \"Page\" edit page and then entering the repository ID for that Page..</p>\n    </div>\n  </div>\n</div>','2019-08-16 04:43:25',0,1,1),(4,'sample/About Plugin','about_plugin','{{kCMS|PAGE|sample_nav}}\n<style>\n  .about_content{\n    font-family:Roboto;\n    font-weight:100;\n    font-size:18px;\n  }\n  #about_logo{\n    opacity:0.5;\n  }\n  #plugin_logo{\n    opacity:1;\n  }\n  #page_logo{\n    opacity:0.5;\n  }\n  #visualizer_logo{\n    opacity:0.5;\n  }\n</style>\n<div class=scontainer>\n  <!--  <div class=pageTitle>About Plugin</div> -->\n  <div class=pageContent style=\"overflow-y:hidden;display:inline-flex\">\n    {{kCMS|PAGE|about_left_bar}}\n    <div class=col-xs-9 style=\'border-left:solid 2px;padding-left:40px;\'>\n      <h2 id=\"plugin_section\">Plugin\n      </h2>\n      <p class=\"about_content\">As described in the introduction section, Plugin is a simple program. Expeced role of plugins are :\n        <br>\n        - To prepare input scripts for solver\n        <br>\n        - To submit job to solver\n        <br>\n        - To handle atomic structure with complicated modifications\n        <br>\n        - To parse output files of user\'s job\n        <br>\n      </p>\n      <p class=\"about_content\">\n        <mark>Because the plugin is a python script and there\'s no limitation to access server, You shold carefully make your plugin if your plugin writes or deletes some files in the server\n        </mark>\n      </p>\n      <h3>Plugin workflow\n      </h3>\n      <p class=\"about_content\">When plugin is execued, SimPL automatically generate job directory and python script files.\n        <br>\n        <code>+20171211162048_42f21bd7c6afd551972446d7bbf32909\n          <br>\n          |-kCmsHeader_global.py\n          <br>\n          |-kCmsHeader_global.pyc\n          <br>\n          |-kCmsScript__hellosimpl\n          <br>\n        </code> Here, kCmsHeader_global* script consists of several kCMS functions and user\'s input as a global variable.\n      </p>\n      <h3>Plugin I/O\n      </h3>\n      <p class=\"about_content\">User\'s input variables are stored in the global variable \n        <code>kCms[\'input\']\n        </code> so that your plugin can easilly use the user\'s input\n        <br>\n        In example, your Page passes \"name\":\"Minho Lee\" as a data for your plugin, kCms[\'input\'] should be\n        <br>\n        <code>kCms[\'input\'] = {\'name\':\'Minho Lee\'}\n        </code> .\n        <br>\n        You can check example case used at \"Call a plugin using Javascript\" section in the Plugin edit menu in admin page.\n        <br>\n        Also, you can export your plugin\'s output via json.dumps function in your plugin.\n        <br>\n        In example,\n        <br>\n        <code>print json.dumps(\"Hello\"+kCms[\'input\'][\'name\'])\n        </code>\n        <br>\n        gives return value of your plugin\n      </p>\n      <h3>Call Plugin from another plugin\n      </h3>\n      <p class=\"about_content\">Plugin can be called from another plugin.\n        <br>\n        As similar to the \"Call a plugin using Javascript\", You can call other plugin from your plugin by function\n        <br>\n        <code>callPlugin(\'[plugin Alias]\',[Input args])\n        </code>\n        <br>\n        \"callPlugin\" function will return output and error of called plugin as JSON format\n        <br>\n        so it is necessary to parse JSON data to Python dictionary like\n        <br>\n        <code>output = json.loads( callPlugin(...) )\n        </code>\n      </p>\n      <h3>Solver\n      </h3>\n      <p class=\"about_content\">Solver is the page where you register your calculation methodology.\n        <br>\n        When you register a solver, you can fill in 5 inputs.\n      </p>\n      <p>*\"Name\" is the solver\'s name.(Names can not be duplicated.)\n        <br>\n        *\"Path\" is the path where the solver is installed.\n        <br>\n        \"Exec Command\" is the command when using the solver.\n        <br>\n        \"Version\" is the solver\'s version.\n        <br>\n        \"Author\" is the person who develped the solver.\n        <br>\n        *is required.\n      </p>\n      <h3>Built-in function\n      </h3>\n      <table class=table>\n        <thead>\n          <tr>\n            <th>Function\n            </th>\n            <th>Input\n            </th>\n            <th>Output\n            </th>\n            <th>Description\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>file_get_contents\n            </td>\n            <td>(filename, use_include_path = 0, context = None, offset = -1, maxlen = -1)\n            </td>\n            <td>File Context\n            </td>\n            <td>Read File data\n            </td>\n          </tr>\n          <tr>\n            <td>getSolver\n            </td>\n            <td>(solvername)\n            </td>\n            <td>Sover Info\n            </td>\n            <td>Import registered Solver information for using.\n            </td>\n          </tr>\n          <tr>\n            <td>qsub\n            </td>\n            <td>(params={ mpi : True|False, # solverExec : [execution command for solver], # ppn : processors per node, nnodes : number of nodes })\n            </td>\n            <td>Queue ID\n            </td>\n            <td>Submit the job to the scheduler.\n            </td>\n          </tr>\n          <tr>\n            <td>qstat\n            </td>\n            <td>(id=-1)\n            </td>\n            <td>Status of the job in Scheduler.\n            </td>\n            <td>Check the status of jobs in the scheduler.\n            </td>\n          </tr>\n          <tr>\n            <td>callPlugin\n            </td>\n            <td>(Plugin Alias, Input Data)\n            </td>\n            <td>Output of the called Plugin\n            </td>\n            <td>Call another plugin.\n            </td>\n          </tr>\n          <tr>\n            <td>getMyInfo\n            </td>\n            <td>()\n            </td>\n            <td>The information of the user\n            </td>\n            <td>>Load the information of the user who called the plugin \n            </td>\n          </tr>\n          <tr>\n            <td>getRepo\n            </td>\n            <td>(Alias of file in Repository for server)\n            </td>\n            <td>File Contents\n            </td>\n            <td>Read the file in the Repository for Server.\n            </td>\n          </tr>\n          <tr>\n            <td>saveJob\n            </td>\n            <td>(args={qinfo, status, pluginId, jobBefore, jobNext, input, output, name, jobdir})\n            </td>\n            <td>DB id of Job\n            </td>\n            <td>Save Something to DB.\n            </td>\n          </tr>\n          <tr>\n            <td>getJobs\n            </td>\n            <td>(args={\"cols\":[column list you want to get],\n              \"order\":[key,(\"asc\" or \"desc\"),\n              \"limit\":[\"offset\",\"limit\"],\n              \"criteria\":[\"array of criteria(Raw Where Query)\"],\n              [columns]:[value]\n              })\n            </td>\n            <td>Jobs that meet the conditions.\n            </td>\n            <td>Load Saved Job Data from DB.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>','2019-08-16 04:43:27',0,1,1),(5,'sample/About Left Bar','about_left_bar','<div style=\'width:266px;padding-left:15px;padding-right:15px\'>\n  <img id=about_logo src=/repo/sample/simpl_logo.png onclick=\"location.href=\'/about\'\" style=\'width:220px;cursor:pointer;margin-bottom:30px\'>\n  <img id=page_logo src=/repo/sample/Page.png onclick=\"location.href=\'/about_page\'\" style=\'display:block; width:78px; cursor:pointer;margin-bottom:30px;\'>\n  <img id=plugin_logo src=/repo/sample/Plug-in.png onclick=\"location.href=\'/about_plugin\'\" style=\'display:block; width:110.67px;cursor:pointer;margin-bottom:30px;\'>\n  <img id=visualizer_logo src=/repo/sample/vlatoms.png onclick=\"location.href=\'/about_vls\'\" style=\'display:block; width:145.33px;cursor:pointer;margin-bottom:30px;\'>\n</div>','2019-08-16 04:43:30',0,1,1),(6,'sample/About Visualizer','about_vls','{{kCMS|PAGE|sample_nav}}\n<style>\n  .about_content{\n    font-family:Roboto;\n    font-weight:100;\n    font-size:18px;\n  }\n  #about_logo{\n    opacity:0.5;\n  }\n  #plugin_logo{\n    opacity:0.5;\n  }\n  #page_logo{\n    opacity:0.5;\n  }\n  #visualizer_logo{\n    opacity:1;\n  }\n</style>\n<div class=scontainer>\n  <!--  <div class=pageTitle>About Page</div> -->\n  <div class=pageContent style=\"overflow-y:hidden;display:inline-flex\">\n    {{kCMS|PAGE|about_left_bar}}\n    <div style=\'border-left:solid 2px;padding-left:40px;padding-right:15px\'>\n      <h2>VLATOMS : Javascript Atomic Visualizer\n      </h2>\n      <div style=\'width:500px;height:500px;\'>\n        {{kCMS|VLATOMS|vla|width:500,height:500}} \n        <script>\n          $(document).ready(function(){\n            vla.Structure={\n              a:[5,0,0],\n              b:[0,5,0],\n              c:[0,0,5],\n              atoms:[]\n            }\n            vla.Structure.atoms.push( new VLatoms.Atom(2.5,2.5,2.5,\"Si\"));\n            vla.update.atomsChanged=true;\n            vla.update.bondsChanged=true;\n            vla.setOptimalCamPosition()\n          });\n        </script>\n      </div>\n      <h3>What is VLatoms?\n      </h3>\n      <p class=\"about_content\">VLAtoms is web based atomic visualizer. VLAtoms is written by Javascipt and using web-standard components such as Canvas, WebGL and Javascript.\n        <br>\n        Thus, Most of modern web brower supports VLAtoms without any plugins.\n      </p>\n      <h3>How to Include VLatoms in my page?\n      </h3>\n      <p class=\"about_content\">You can include VLAtoms into your page with a tag below.\n        <br>\n        <code>{ { kCMS|VLATOMS|vla|width:500,height:500} } (remove space between { and { )\n        </code>\n        <br>\n        Here, vla is a name of VLatoms which is used in javascript functions or other page components.\n        <br>\n      </p>\n      <h3>Frequently used functions\n      </h3>\n      <p class=\"about_content\">\"vla\" and \"vlb\" are the name of VLatoms.\n      </p>\n      <table class=table >\n        <thead>\n          <tr>\n            <th>Usage\n            </th>\n            <th>Description\n            </th>\n            <th>Return\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>vla.setOptimalCamPosition();\n            </td>\n            <td>Adjust the position of the camera to the structure.\n            </td>\n            <td>-\n            </td>\n          </tr>\n          <tr>\n            <td>vla.update.atomsChanged=true;\n            </td>\n            <td>Turn on the atom update switch.\n            </td>\n            <td>-\n            </td>\n          </tr>\n          <tr>\n            <td>vla.update.bondsChanged=true;\n            </td>\n            <td>Turn on the bond update switch.\n            </td>\n            <td>-\n            </td>\n          </tr>\n          <tr>\n            <td>var c_structure = VLatoms.Utils.redefineStructure(vla.Structure);\n            </td>\n            <td>Return clone of Inputted VLatoms Structure.\n            </td>\n            <td>VLatoms Structure\n            </td>\n          </tr>\n          <tr>\n            <td>VLatoms.Utils.download(filename, contents);\n            </td>\n            <td>Download the file named \"filename\" with contents of \"contents\".\n            </td>\n            <td>-\n            </td>\n          </tr>\n          <tr>\n            <td>var volume = VLatoms.Utils.getVolume(vla.Structure);\n            </td>\n            <td>Return Volume of Inputted VLatoms Structure.\n            </td>\n            <td>Volume\n            </td>\n          </tr>\n          <tr>\n            <td>var is_exists = VLatoms.Utils.findElementInArray(element,vla.Structure.atoms);\n            </td>\n            <td>Return whether the inputted element exists in the inputted array.\n            </td>\n            <td>Boolean\n            </td>\n          </tr>\n          <tr>\n            <td>var cif_file=VLatoms.Utils.Structure.toCIF(vla.Structure);\n            </td>\n            <td>Converts VLatoms Structure data to CIF format.\n            </td>\n            <td>Text(CIF format)\n            </td>\n          </tr>\n          <tr>\n            <td>var poscar_file = VLatoms.Utils.Structure.toPoscar(vla.Structure);\n            </td>\n            <td>Converts VLatoms Structure data to Posacr format.\n            </td>\n            <td>Text(Posacar format)\n            </td>\n          </tr>\n          <tr>\n            <td>var vla.Structure = VLatoms.Utils.Structure.union(vla.Structure, vlb.Structure);\n            </td>\n            <td>Make a new VLatoms structure with the atoms of vlb.Structure added to vla.Structure.\n            </td>\n            <td>VLatoms Structure\n            </td>\n          </tr>\n          <tr>\n            <td>var vla.Structure = VLatoms.Utils.Structure.union(vla.Structure, vlb.Structure);\n            </td>\n            <td>Make a new VLatoms structure with the atoms of vlb.Structure added to vla.Structure.\n            </td>\n            <td>VLatoms Structure\n            </td>\n          </tr>\n          <tr>\n            <td>vla.IO.readFiles(file);\n            </td>\n            <td>Append the converted structure from the file to VLatoms.\n            </td>\n            <td>-\n            </td>\n          </tr>\n          <tr>\n            <td>VLatoms.Utils.Structure.xyzToVLatoms(xyz_file_data);\n            </td>\n            <td>Returns the VLatoms Structure converted from the xyz_file_data.\n            </td>\n            <td>VLatoms Structure\n            </td>\n          </tr>\n          <tr>\n            <td>VLatoms.Utils.Structure.poscarToVLatoms(poscar_file_data);\n            </td>\n            <td>Returns the VLatoms Structure converted from the poscar_file_data.\n            </td>\n            <td>VLatoms Structure\n            </td>\n          </tr>\n          <tr>\n            <td>VLatoms.Utils.Structure.cifToVLatoms(cif_file_data);\n            </td>\n            <td>Returns the VLatoms Structure converted from the cif_file_data.\n            </td>\n            <td>VLatoms Structure\n            </td>\n          </tr>\n          <tr>\n            <td>vla.Manipulate.insideTest(vla.Structure.atoms,{\"onEscape\":true});\n            </td>\n            <td>Moves off-boundary atoms to the appropriate location.\n            </td>\n            <td>VLatoms Structure\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>','2019-08-16 04:43:33',0,1,1),(7,'sample/Manipulator/Manipulator(vla)','sample_mainpulator','<style>\n  .ptWindow{\n    z-index:100;\n    top:25%;\n    left:25%;\n    width:50%;\n    min-width:565px;\n    position:absolute;\n    background-color:white;\n    padding:5px;\n    -webkit-box-shadow: 0px 0px 35px 6px rgba(184,184,184,1);\n    -moz-box-shadow: 0px 0px 35px 6px rgba(184,184,184,1);\n    box-shadow: 0px 0px 35px 6px rgba(184,184,184,1);\n  }\n  .ptWrapper{\n    display:table;\n    width:100%;\n    height:100%;\n  }\n  #pTable{\n    display:table;\n    width:100%;\n    height:100%;\n  }\n  .ptrow{\n    display:table-row;\n  }\n  .ptitem{\n    font-size:12px;\n    width:5.54%;\n    /* 100/18 */\n    padding:2px;\n    text-align:center;\n    vertical-align:middle;\n    display:table-cell;\n    font-weight:bold;\n  }\n  .pt-group-1{\n  }\n  .pt-element{\n    width:100%;\n    height:100%;\n  }\n  .pt-element.ptOccupied{\n    -webkit-box-shadow: 0px 0px 5px 1px rgba(184,184,184,1);\n    -moz-box-shadow: 0px 0px 5px 1px rgba(184,184,184,1);\n    box-shadow: 0px 0px 5px 1px rgba(184,184,184,1);\n    background-color:#eee;\n  }\n  .pt-filter-match{\n    background-color:yellow !important;\n  }\n  .pt-element.ptOccupied:hover{\n    background-color:yellow;\n  }\n  .pt-filter-del{\n    border: none;\n    background-color: #1da51d;\n    border-radius: 3px;\n    color: white;\n    margin: 2px 1px;\n  }\n  .pt-selected{\n    background-color:#473d82 !important;\n    color:white;\n  }\n  .manipulator_wrapper{\n    padding:20px;\n    display: none;\n  }\n  .manipulator-icon{\n    display:inline-block;\n  }\n  .manipulator-icon.active .manipulate_icon{\n    background-color:#ececec;\n  }\n  .hide_wrapper{\n    float:right;\n  }\n  .vlatoms_mani_label{\n    justify-content:flex-end !important;\n  }\n</style>\n<div class=\"manipulate_category_wrapper\">\n  <nav>\n    <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n      <a class=\"nav-item nav-link active\" id=\"manipulator-cell-tab\" data-toggle=\"tab\" href=\"#manipulator-cell\" role=\"tab\" aria-controls=\"manipulator-cell\" aria-selected=\"true\">Cell</a>\n      <a class=\"nav-item nav-link\" id=\"manipulator-atom-tab\" data-toggle=\"tab\" href=\"#manipulator-atom\" role=\"tab\" aria-controls=\"manipulator-atom\" aria-selected=\"false\">Atom</a>\n      <a class=\"nav-item nav-link\" id=\"manipulator-selector-tab\" data-toggle=\"tab\" href=\"#manipulator-selector\" role=\"tab\" aria-controls=\"manipulator-selector\" aria-selected=\"false\">Selector</a>\n    </div>\n  </nav>\n  <div class=\"tab-content\" id=\"nav-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"manipulator-cell\" role=\"tabpanel\" aria-labelledby=\"manipulator-cell-tab\">\n      <a class=\"manipulator-icon manipulator-icon-crystal_builder\" href=\"#\" onclick=\"javascript:select_manipulator(\'crystal_builder\');\"><img class=\"manipulate_icon\" src=\"/repo/sample/Manipulator/crystal.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-strain\" href=\"#\" onclick=\"javascript:select_manipulator(\'strain\');\"><img class=\"manipulate_icon\" src=\"/repo/sample/Manipulator/strain.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-clone\" href=\"#\" onclick=\"javascript:select_manipulator(\'clone\');\"><img class=\"manipulate_icon\" src=\"/repo/sample/Manipulator/clone.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-vacuum\" href=\"#\" onclick=\"javascript:select_manipulator(\'vacuum\');\"><img class=\"manipulate_icon\" src=\"/repo/sample/Manipulator/vacuum.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-cleave\" href=\"#\" onclick=\"javascript:select_manipulator(\'cleave\');\"><img class=\"manipulate_icon\" src=\"/repo/sample/Manipulator/cleave.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-merge\" href=\"#\" onclick=\"javascript:select_manipulator(\'merge\');\"><img class=\"manipulate_icon\" src=\"/repo/sample/Manipulator/merge.png\" style=\"width:55px;border-radius:5px;\"></a>\n    </div>\n    <div class=\"tab-pane fade\" id=\"manipulator-atom\" role=\"tabpanel\" aria-labelledby=\"manipulator-atom-tab\">\n      <a class=\"manipulator-icon manipulator-icon-add\" href=\"#\" onclick=\"javascript:select_manipulator(\'add\');\"><img class=\"manipulate_icon\" src=\"/repo/sample/Manipulator/addatom.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-rotate\" href=\"#\" onclick=\"javascript:select_manipulator(\'rotate\');\"><img class=\"manipulate_icon manipulate_icon_atomsneeded deactivated_icon\" src=\"/repo/sample/Manipulator/move_rotate.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-change\" href=\"#\" onclick=\"javascript:select_manipulator(\'change\');\"><img class=\"manipulate_icon manipulate_icon_atomsneeded deactivated_icon\" src=\"/repo/sample/Manipulator/change.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-edit\" href=\"#\" onclick=\"javascript:select_manipulator(\'edit\');\"><img class=\"manipulate_icon manipulate_icon_atomsneeded deactivated_icon\" src=\"/repo/sample/Manipulator/edit.png\" style=\"width:55px;border-radius:5px;\"></a>\n    </div>\n    <div class=\"tab-pane fade\" id=\"manipulator-selector\" role=\"tabpanel\" aria-labelledby=\"manipulator-selector-tab\">\n      <a href=\"#\" onclick=\"javascript:turnOnSelectMode(\'atom\');\"><img class=\"manipulate_icon manipulate_select_icon manipulate_select_atom\" src=\"/repo/sample/Manipulator/singleatom.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a href=\"#\" onclick=\"javascript:turnOnSelectMode(\'rect\');\"><img class=\"manipulate_icon manipulate_select_icon manipulate_select_rect\" src=\"/repo/sample/Manipulator/rectangular.png\" style=\"width:55px; border-radius:5px;\"></a>\n      <a href=\"#\" onclick=\"javascript:turnOnSelectMode(\'circ\');\"><img class=\"manipulate_icon manipulate_select_icon manipulate_select_circ\" src=\"/repo/sample/Manipulator/circular.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a href=\"#\" onclick=\"javascript:turnOnSelectMode(\'hex\');\"><img class=\"manipulate_icon manipulate_select_icon manipulate_select_hex\" alt=\"Hex\" src=\"/repo/sample/Manipulator/hexagon.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a href=\"#\" onclick=\"javascript:turnOnSelectMode(\'element\');\"><img class=\"manipulate_icon manipulate_select_icon manipulte_select_element\" src=\"/repo/sample/Manipulator/element.png\" style=\"width:55px;border-radius:5px;\"></a>\n      <a class=\"manipulator-icon manipulator-icon-sphere\" href=\"#\" onclick=\"javascript:select_manipulator(\'sphere\');\"><img class=\"manipulate_icon manipulate_select_icon manipulte_select_sphere\" src=\"/repo/sample/Manipulator/sphere.png\" style=\"width:55px;border-radius:5px;\"></a>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_strain\">\n    <div class=\"form-group\">\n      <label>Strain (new/old in %) :</label>\n      <div class=\"form-inline manipulte_wrapper_cell\">\n        <input class=\"form-control manipulator_strain_input_a\" placeholder=\"a\" style=\"width:50px;\" type=\"text\"> \n        <input class=\"form-control manipulator_strain_input_b\" placeholder=\"b\" style=\"width:50px;\" type=\"text\"> \n        <input class=\"form-control manipulator_strain_input_c\" placeholder=\"c\" style=\"width:50px;\" type=\"text\"> \n        <button class=\"btn manipulator_ok manipulator_strain_ok btn-success\" onclick=\"javascript:strain_ok();\" type=\"button\">\n          <i class=\"fas fa-check\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_cleave\">\n    <div class=\"form-group\">\n      <label>Cleave Surface (hkl in miller index) :</label>\n      <div class=\"form-inline manipulte_wrapper_cell\">\n        <input class=\"form-control manipulator_cleave_input_h\" placeholder=\"h\" style=\"width:50px;\" type=\"text\"> \n        <input class=\"form-control manipulator_cleave_input_k\" placeholder=\"k\" style=\"width:50px;\" type=\"text\"> \n        <input class=\"form-control manipulator_cleave_input_l\" placeholder=\"l\" style=\"width:50px;\" type=\"text\"> \n        <span class=\"tooltip-control\" style=\"/*padding-left:26px;*/\" title=\"If max z is blank, a structure containing grid points corresponding to the given Miller index is output. If max z is given, a list of structures with a vertical height of the a-b plane of less than max z and a vector c near the right angle is output.\">\n          <input class=\"form-control manipulator_cleave_input_maxv3\" placeholder=\"max z\" style=\"width:60px;\" type=\"text\">\n        </span> \n        <button class=\"btn manipulator_ok manipulator_cleave_ok btn-success\" onclick=\"javascript:cleave_ok();\" type=\"button\">\n          <i class=\"fas fa-check\"></i>\n        </button>\n        <button class=\"btn btn-primary\" onclick=\"javascript:change_c_vector();\">Change c vector</button>\n      </div>\n    </div>\n    <div class=\"cleave_list\" style=\"height:200px;overflow:auto;\">\n      <table class=\"table cleave_table\">\n        <thead>\n          <tr>\n            <th>no.</th>\n            <th>a</th>\n            <th>b</th>\n            <th>c</th>\n            <th>α</th>\n            <th>β</th>\n            <th>γ</th>\n          </tr>\n        </thead>\n        <tbody>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_clone\">\n    <div class=\"form-group\">\n      <label># of Cells :</label>\n      <div class=\"form-inline manipulte_wrapper_cell\" style=\"margin-bottom:3px;\">\n        <input class=\"form-control manipulator_clone_input_a\" placeholder=\"a\" style=\"width:50px;\" type=\"text\"> \n        <input class=\"form-control manipulator_clone_input_b\" placeholder=\"b\" style=\"width:50px;\" type=\"text\"> \n        <input class=\"form-control manipulator_clone_input_c\" placeholder=\"c\" style=\"width:50px;\" type=\"text\"> \n        <button class=\"btn manipulator_ok manipulator_clone_ok btn-success\" onclick=\"javascript:clone_ok();\" type=\"button\">\n          <i class=\"fas fa-check\"></i>\n        </button>\n      </div>\n      <div>\n        <input id=\"selected_clone\" type=\"checkbox\"> Clone the selected atom(s)\n      </div>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_vacuum\">\n    <div class=\"form-group\">\n      <label>Vacuum size in Å:</label>\n      <div class=\"form-inline manipulte_wrapper_cell\">\n        <div style=\"margin-bottom:3px;\">\n          <input class=\"form-control manipulator_vacuum_input_na\" placeholder=\"-a\" style=\"width:50px;\" type=\"text\"> \n          <input class=\"form-control manipulator_vacuum_input_nb\" placeholder=\"-b\" style=\"width:50px;\" type=\"text\"> \n          <input class=\"form-control manipulator_vacuum_input_nc\" placeholder=\"-c\" style=\"width:50px;\" type=\"text\">\n        </div>\n        <div>\n          <input class=\"form-control manipulator_vacuum_input_pa\" placeholder=\"+a\" style=\"width:50px;\" type=\"text\"> \n          <input class=\"form-control manipulator_vacuum_input_pb\" placeholder=\"+b\" style=\"width:50px;\" type=\"text\"> \n          <input class=\"form-control manipulator_vacuum_input_pc\" placeholder=\"+c\" style=\"width:50px;\" type=\"text\"> \n          <button class=\"btn manipulator_ok manipulator_vacuum_ok btn-success\" onclick=\"javascript:vacuum_ok();\" type=\"button\">\n            <i class=\"fas fa-check\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_add\">\n    <div class=\"form-group\">\n      <label>Add</label>\n      <div>\n        <div>\n          <img class=\"ms_add_type ms_add_atom\" data-type=\"atom\" onclick=\"set_add_type(\'atom\');\" src=\"/repo/sample/Manipulator/ms_add_atom.png\" style=\"width:40px;\">\n        </div>\n        <div class=\"ms_add_type_wrapper ms_add_atom_input_wrapper\">\n          <div class=\"form-group form-inline\" style=\"margin-top:5px;\">\n            <label style=\"width:62px;text-align:right;\">Element :</label> \n            <input class=\"form-control manipulator_add_element\" id=\"add_atom_element\" onclick=\"ptable_select(\'.manipulator_add_element\');\" placeholder=\"Click here to choose\" style=\"width:160px;\" type=\"text\">\n          </div>\n          <div>\n            <label style=\"width:62px;text-align:right;vertical-align:top;\">Position :</label>\n            <div style=\"margin-left:5px;display:inline-block;\">\n              <div>\n                <label>\n                  <input checked=\"\" class=\"manipulate_add_direction\" name=\"manipulate_add_direction\" type=\"radio\" value=\"rel\"> Relative to the selected atom(s)\n                </label>\n                <span class=\"relative_pos add_atom_input\" style=\"display:block;padding-left:30px;\">\n                  <input class=\"VL-input-50px\" id=\"manipulate_add_dx_rel\" placeholder=\"Δx\" style=\"width:40px;\" type=\"text\"> \n                  <input class=\"VL-input-50px\" id=\"manipulate_add_dy_rel\" placeholder=\"Δy\" style=\"width:40px;\" type=\"text\"> \n                  <input class=\"VL-input-50px\" id=\"manipulate_add_dz_rel\" placeholder=\"Δz\" style=\"width:40px;\" type=\"text\">\n                </span> \n                <label class=\"tooltip-control relative_pos add_atom_input\" title=\"If this box is checked, the distances between the selected atoms and the added atoms are set to Van der Waals radius and the three values entered in the spaces above are used as the direction vector.\">\n                  <input id=\"manipulate_add_vdw\" type=\"checkbox\"> VDW Radii\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input class=\"manipulate_add_direction\" name=\"manipulate_add_direction\" type=\"radio\" value=\"cen\"> Center of the selected atom(s)\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input class=\"manipulate_add_direction\" name=\"manipulate_add_direction\" type=\"radio\" value=\"abs\"> Absolute position\n                </label>\n                <span class=\"absolute_pos add_atom_input\" style=\"display:block;padding-left:30px;\">\n                  <input class=\"VL-input-50px\" id=\"manipulate_add_dx_abs\" placeholder=\"x (Å)\" style=\"width:40px;\" type=\"text\"> \n                  <input class=\"VL-input-50px\" id=\"manipulate_add_dy_abs\" placeholder=\"y (Å)\" style=\"width:40px;\" type=\"text\"> \n                  <input class=\"VL-input-50px\" id=\"manipulate_add_dz_abs\" placeholder=\"z (Å)\" style=\"width:40px;\" type=\"text\">\n                </span>\n              </div>\n              <div style=\"text-align:right;\">\n                <button class=\"VLM_btn_highlight btn btn-info\" onclick=\"javascript:addatom_apply();\" style=\"margin-left:215px;\">Apply</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_rotate\">\n    <div class=\"form-group\">\n      <label>Step in Å(Move) or º(Rotation) :</label>\n      <div>\n        <div>\n          <input checked=\"\" class=\"manipulate_atom_mode\" name=\"manipulate_atom_mode\" type=\"radio\" value=\"move\"> move \n          <input class=\"manipulate_atom_mode\" name=\"manipulate_atom_mode\" type=\"radio\" value=\"rotate\"> rotate\n        </div>\n        <div>\n          <input class=\"manipulate_atom_axis\" name=\"manipulate_atom_axis\" type=\"radio\" value=\"x\"> x \n          <input class=\"manipulate_atom_axis\" name=\"manipulate_atom_axis\" type=\"radio\" value=\"y\"> y \n          <input checked=\"\" class=\"manipulate_atom_axis\" name=\"manipulate_atom_axis\" type=\"radio\" value=\"z\"> z\n        </div>\n        <div class=\"form-inline\">\n          <input class=\"form-control manipulator_atom_input_step\" placeholder=\"Step\" style=\"width:60px;\" type=\"text\"> \n          <button class=\"btn manipulator_ok manipulator_manipulate_atom_ok btn-success\" onclick=\"javascript:manipulate_atom_ok();\" type=\"button\">\n            <i class=\"fas fa-check\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_change\">\n    <div class=\"form-group\">\n      <label>Change Element of Selected Atoms :</label>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:85px;margin-right:5px;\">From : </label>\n        <input class=\"form-control manipulator_atom_change_element_from\" onclick=\"ptable_select(\'.manipulator_atom_change_element_from\');\" style=\"width:60px;\" type=\"text\" placeholder=\"All\">\n      </div>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:85px;margin-right:5px;\">Substituent : </label>\n        <input class=\"form-control manipulator_atom_change_element\" onclick=\"ptable_select(\'.manipulator_atom_change_element\');\" placeholder=\"\" style=\"width:60px;\" type=\"text\">\n      </div>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:85px;margin-right:5px;\">Percent : </label>\n        <input class=\"form-control manipulator_atom_change_element_percent\" placeholder=\"0~100\" style=\"width:60px;\" type=\"text\" value=\"100\">\n      </div>\n      <div class=\"form-inline\">\n        <button class=\"btn manipulator_ok manipulator_change_atom_ok btn-success\" onclick=\"javascript:change_ok();\" type=\"button\">\n          <i class=\"fas fa-check\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_ht\">\n    <div class=\"form-group\">\n      <label>High Throughput Calculation :</label>\n      <div class=\"form-inline\">\n        <div>\n          Substituents : \n          <input class=\"form-control manipulator_atom_ht_element\" onclick=\"ptable_select(\'.manipulator_atom_ht_element\',{multi:true});\" placeholder=\"\" style=\"width:160px;\" type=\"text\"> \n          <button class=\"btn manipulator_ok manipulator_ht_ok btn-success\" onclick=\"javascript:ht_ok();\" type=\"button\">\n            <i class=\"fas fa-check\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_merge\">\n    <div class=\"form-group\">\n      <label>Merge :</label>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:135px;\">Base Structure : </label> \n        <select class=\"form-control merge_based\">\n        </select>\n      </div>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:135px;\">Attached Structure : </label> \n        <select class=\"form-control merge_attached\">\n        </select>\n      </div>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:50px;\">Plane : </label> \n        <select class=\"form-control merge_plane\">\n          <option value=\"XY\">XY</option>\n          <option value=\"XZ\">XZ</option>\n          <option value=\"YZ\">YZ</option>\n        </select>\n      </div>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:50px;\">Order : </label> \n        <select class=\"form-control merge_order\">\n          <option value=\"or-fixed-added\">Origin-Based-Attached</option>\n          <option value=\"or-added-fixed\">Origin-Attached-Based</option>\n        </select>\n      </div>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:50px;\">Space :</label> \n        <input class=\"form-control merge_space\">\n      </div>\n      <div class=\"form-inline\">\n        <label class=\"vlatoms_mani_label\" style=\"width:50px;\">Clone :</label> \n        <input class=\"merge_axis\" data-axis=\"x\" type=\"checkbox\">\n        <span class=\"vlatoms_mani_text\" style=\"margin-left:3px; margin-right:5px;\">x-axis</span> \n        <input class=\"merge_axis\" data-axis=\"y\" type=\"checkbox\">\n        <span class=\"vlatoms_mani_text\" style=\"margin-left:3px; margin-right:5px;\">y-axis</span> \n        <input class=\"merge_axis\" data-axis=\"z\" type=\"checkbox\">\n        <span class=\"vlatoms_mani_text\" style=\"margin-left:3px; margin-right:5px;\">z-axis</span>\n      </div> \n    </div>\n    <button class=\"btn manipulator_ok manipulator_merge_ok btn-success\" onclick=\"javascript:merge_ok();\" type=\"button\">\n      <i class=\"fas fa-check\"></i>\n    </button>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_sphere\">\n    <div class=\"form-group\">\n      <label>Center of selection(Å)</label>\n      <div class=\"form-inline\">\n        <span style=\"display:inline-block;width:55px\">x : </span>\n        <input class=\"sphere_select_org_x form-control\">\n      </div>\n      <div class=\"form-inline\">\n        <span style=\"display:inline-block;width:55px\">y : </span>\n        <input class=\" sphere_select_org_y form-control\">\n      </div>\n      <div class=\"form-inline\">\n        <span style=\"display:inline-block;width:55px\">z : </span>\n        <input class=\"sphere_select_org_z form-control\">\n      </div>\n      <div class=\"form-inline\">\n        <span style=\"display:inline-block;width:55px\">Radius : </span>\n        <input class=\"sphere_select_org_dist form-control\">\n      </div>\n      <div class=\"form-inline\">\n        <span style=\"display:inline-block;width:55px\">Inverse : </span>\n        <input class=\"sphere_select_inv\" type=\"checkbox\">\n      </div>\n    </div>\n    <button type=\"button\" value=\"OK\" onclick=\"select_atom_sphere();\" class=\"btn btn-primary\" style=\"float:right;\">OK</button>\n  </div>\n  <div class=\"manipulator_wrapper manipulator_wrapper_crystal_builder\">\n    {{kCMS|PAGE|sample_crystalbuilder}}\n  </div>\n</div>\n<script>\n  var dist_atom=function(arr1, arr2){\n    var distance=0;\n    for(var i=0; i<3 ; i++){\n      distance+=(arr1[i]-arr2[i])*(arr1[i]-arr2[i]);\n    }\n    return math.sqrt(distance);\n  }\n  var select_atom_sphere=function(){\n    var org=[$(\".sphere_select_org_x\").val(),$(\".sphere_select_org_y\").val(),$(\".sphere_select_org_z\").val()];\n    var dist=$(\".sphere_select_org_dist\").val();\n    var inv=$(\".sphere_select_inv\").prop(\"checked\");\n    for(var i=0 ; i<vla.Structure.atoms.length; i++){\n      var atom=vla.Structure.atoms[i];\n      var dist_from_org = dist_atom(org,[atom.x,atom.y,atom.z]);\n      if(dist_from_org <= dist){\n        if(inv == false){\n          vla.IO.selectedAtoms.push(i);\n        }\n      }\n      else{\n        if(inv == true){\n          vla.IO.selectedAtoms.push(i);\n        }\n      }\n    }\n    vla.IO.highlightSelectedAtoms();\n  }\n  $(document).ready(function(){\n    $(\'.manipulator_wrapper\').hide();\n  }\n                   );\n  function isInt(n){\n    return Math.floor(n)==n;\n  };\n  function turnOnSelectMode(mode){\n    vla.IO.toggleSelection(mode);\n  };\n  function showStructure(newB, structure, args) {\n    var orgB = [\n      structure.a,\n      structure.b,\n      structure.c,\n    ]\n    var coord_cart = [];\n    var ca;\n    for (var i = 0; i < structure.atoms.length; i++) {\n      ca = structure.atoms[i];\n      coord_cart.push([ca.x, ca.y, ca.z]);\n    }\n    var coord_fract = math.multiply(coord_cart, math.inv(orgB));\n    console.log(orgB, newB);\n    var newAtoms = VLatoms.Utils.Structure.basisTransform(orgB, newB, coord_fract /*vla.Structure.atoms*/ );\n    console.log(newAtoms);\n    if (newAtoms === false) {\n      alert(\'Failed to draw the structure. Please send the original structure and Miller index to the manager and we will correct it.\');\n      return false;\n    }\n    var _newAtoms = newAtoms;\n    var _newB = newB;\n    var atoms = [];\n    for (var i = 0; i < _newAtoms.length; i++) {\n      var pos_fract = [_newAtoms[i][0], _newAtoms[i][1], _newAtoms[i][2]];\n      var element = structure.atoms[_newAtoms[i][3]].element;\n      var pos_cart = math.multiply(pos_fract, _newB)\n      atoms.push({\n        x: pos_cart[0],\n        y: pos_cart[1],\n        z: pos_cart[2],\n        element: element\n      }\n                );\n    }\n    var newStructure = {\n      a: _newB[0],\n      b: _newB[1],\n      c: _newB[2],\n      atoms: atoms\n    };\n    newStructure = VLatoms.Utils.set_to_x_y_plane(newStructure);\n    vla.Structure = VLatoms.Utils.redefineStructure(newStructure);\n    vla.update.atomsChanged = true;\n    vla.update.bondsChanged = true;\n    var hkl_text = \"\";\n    if (args != undefined && args.hkl != undefined) {\n      hkl_text = args.hkl[0] + \" \" + args.hkl[1] + \" \" + args.hkl[2] + \" \";\n    }\n    vla.Manipulate.addHistory({\n      mode: \"Cleave (\" + hkl_text + \")\",\n      args: {\n      }\n      ,\n      Structure: objClone(vla.Structure)\n    }\n                             );\n    return;\n  };\n  function addatom_apply(){\n    var args = {\n    };\n    args[\'vdw\'] = $(\'#manipulate_add_vdw\').is(\":checked\");\n    args[\'mode\'] = $(\'.manipulate_add_direction:checked\').val();\n    args[\'element\'] = $(\'.manipulator_add_element\').val();\n    switch(args[\'mode\']){\n      case \"rel\":\n      case \"abs\":\n        var dx = $(\'#manipulate_add_dx_\'+args[\'mode\']).val();\n        var dy = $(\'#manipulate_add_dy_\'+args[\'mode\']).val();\n        var dz = $(\'#manipulate_add_dz_\'+args[\'mode\']).val();\n        dx = Number(dx);\n        dy = Number(dy);\n        dz = Number(dz);\n        if(args[\'mode\'] == \"abs\"){\n          if(vla.Structure.atoms.length == 0){\n            if(dx == 0 || dy == 0 || dz == 0){\n              return false;\n            }\n          }\n        }\n        else{\n          if(dx == 0 && dy == 0 && dz == 0){\n            return false;\n          }\n        }\n        args[\'dx\'] = dx;\n        args[\'dy\'] = dy;\n        args[\'dz\'] = dz;\n        break;\n      case \"pre\":\n        args[\'structure\'] = $(\'#preset_listbox\').val();\n        if(args[\'structure\'] === \"CNT\"){\n          args[\'n\']=$(\'#cnt_n\').val();\n          args[\'m\']=$(\'#cnt_m\').val();\n          args[\'repeat\']=$(\'#cnt_repeat\').val();\n        }\n        break;\n    }\n    for(var i in args){\n      if(args[i]===\"\"){\n        if(i != \"element\" || args[\'mode\'] != \"pre\"){\n          alert(\"There is a blank.\");\n          return false;\n        }\n      }\n    }\n    vla.manipulateAtom.add(args);\n    vla.IO.restoreAtomsColor();\n    vla.IO.highlightSelectedAtoms();\n  }\n  function change_ok(){\n    var sa=objClone(vla.IO.selectedAtoms);\n    var atoms = vla.Structure.atoms;\n    var alen =sa.length;\n    var afrom = $(\".manipulator_atom_change_element_from\").val();\n    var apercent = $(\".manipulator_atom_change_element_percent\").val()\n    var anum=0;\n    if(afrom !== \"\" && afrom !== \"All\"){\n      for(var i=alen-1 ; i>=0 ; i--){\n        if(atoms[sa[i]].element !== afrom){\n          sa.splice(i,1);\n        }\n      }\n    }\n    alen=sa.length;\n    anum=alen * apercent / 100;\n    var safe_cnt=0;\n    while(alen>anum){\n      sa.splice(Math.floor(Math.random() * alen), 1);\n      alen=sa.length;\n      safe_cnt++;\n      if(safe_cnt>100){\n        break;\n      }\n    }\n    vla.IO.selectedAtoms = objClone(sa);\n    vla.manipulateAtom.change({\n      te:$(\'.manipulator_atom_change_element\').val()\n    }\n                             );\n  }\n  function manipulate_atom_ok(){\n    manipulate_atom=true;\n    var mode = $(\'.manipulate_atom_mode:checked\').val();\n    var axis = $(\'.manipulate_atom_axis:checked\').val();\n    var step = $(\'.manipulator_atom_input_step\').val();\n    if(step == \"\"){\n      return false;\n    }\n    switch(mode){\n      case \"rotate\":\n        vla.manipulateAtom.rotate({\n          direction:axis,step:step\n        }\n                                 );\n        break;\n      case \"move\":\n        vla.manipulateAtom.move({\n          direction:axis,step:step\n        }\n                               );\n        break;\n    }\n  }\n  function strain_ok(){\n    manipulate_atom=false;\n    var sa = $(\'.manipulator_strain_input_a\').val();\n    var sb = $(\'.manipulator_strain_input_b\').val();\n    var sc = $(\'.manipulator_strain_input_c\').val();\n    sa = Number(sa);\n    sb = Number(sb);\n    sc = Number(sc);\n    if(sa == 0 && sb == 0 && sc == 0){\n      return false;\n    }\n    if( !$.isNumeric(sa) || !$.isNumeric(sb) || !$.isNumeric(sc) ){\n      alert(ERR_MANIPULATE_INPUT_GENERAL);\n      return false;\n    }\n    sa = 1+sa/100;\n    sb = 1+sb/100;\n    sc = 1+sc/100;\n    console.log(sa,sb,sc);\n    vla.Manipulate.execute(\"strain\",{\n      \"sx\":sa,\"sy\":sb,\"sz\":sc\n    }\n                          );\n  }\n  function change_c_vector(){\n    vla.Structure.c=[0,0,vla.Structure.c[2]];\n    vla.Manipulate.insideTest(vla.Structure.atoms,{\n      onEscape:true\n    }\n                             );\n    vla.update.atomsChanged=true;\n    vla.update.bondsChanged=true;\n    vla.animateControl.once();\n  }\n  function clone_ok(){\n    manipulate_atom = false;\n    var selectedClone = $(\'#selected_clone\').is(\':checked\');\n    if(selectedClone && vla.IO.selectedAtoms.length === 0){\n      alert(\"Please select the atoms to clone.\");\n      return false;\n    }\n    var na = $(\'.manipulator_clone_input_a\').val();\n    var nb = $(\'.manipulator_clone_input_b\').val();\n    var nc = $(\'.manipulator_clone_input_c\').val();\n    if(na == \"\"){\n      na = 1;\n    }\n    if(nb == \"\"){\n      nb = 1;\n    }\n    if(nc == \"\"){\n      nc = 1;\n    }\n    if(na == 1 && nb == 1 && nc == 1){\n      return false;\n    }\n    if(na == 0 || nb == 0 || nc == 0){\n      alert(\"0 is not allowed.\");\n      return false;\n    }\n    if( !$.isNumeric(na) || !$.isNumeric(nb) || !$.isNumeric(nc) || !isInt(na) || !isInt(nb) || !isInt(nc)){\n      alert(ERR_MANIPULATE_INPUT_GENERAL);\n      return false;\n    }\n    vla.Manipulate.execute(\"clone\",{\n      \"nx\":na,\"ny\":nb,\"nz\":nc, \"selectedClone\":selectedClone\n    }\n                          );\n    vla.setOptimalCamPosition();\n  }\n  function vacuum_ok(){\n    manipulate_atom=false;\n    var vaccum = [];\n    vaccum[0] = $(\'.manipulator_vacuum_input_na\').val();\n    vaccum[1] = $(\'.manipulator_vacuum_input_nb\').val();\n    vaccum[2] = $(\'.manipulator_vacuum_input_nc\').val();\n    vaccum[3] = $(\'.manipulator_vacuum_input_pa\').val();\n    vaccum[4] = $(\'.manipulator_vacuum_input_pb\').val();\n    vaccum[5] = $(\'.manipulator_vacuum_input_pc\').val();\n    for(var i = 0; i < 6; i++){\n      vaccum[i] = Number(vaccum[i]);\n      if( isNaN(vaccum[i])){\n        alert(ERR_MANIPULATE_INPUT_GENERAL);\n        return false;\n      }\n    }\n    vla.Manipulate.execute(\"vacuum\",{\n      \"nx\":vaccum[0],\n      \"ny\":vaccum[1],\n      \"nz\":vaccum[2],\n      \"px\":vaccum[3],\n      \"py\":vaccum[4],\n      \"pz\":vaccum[5]\n    }\n                          );\n  };\n  function cleave_ok(){\n    var cleave_orgStructure = objClone(vla.Structure);\n    var h = $(\'.manipulator_cleave_input_h\').val()*1;\n    var k = $(\'.manipulator_cleave_input_k\').val()*1;\n    var l = $(\'.manipulator_cleave_input_l\').val()*1;\n    var orgB = [\n      cleave_orgStructure.a,\n      cleave_orgStructure.b,\n      cleave_orgStructure.c,\n    ];\n    var args = {\n    };\n    args[\'maxv3length\']=$(\'.manipulator_cleave_input_maxv3\').val()*1;\n    var basisList = VLatoms.Utils.Structure.cleaveSurface(orgB,[h,k,l],args);\n    var target=$(\'.cleave_table\').find(\"tbody\");\n    target.empty();\n    var innerhtml, b, la, lb, lc;\n    for(var i=0;i<basisList.length;i++){\n      b = basisList[i];\n      la = VLatoms.Math.len( b.basis[0] ).toFixed(3);\n      lb = VLatoms.Math.len( b.basis[1] ).toFixed(3);\n      lc = VLatoms.Math.len( b.basis[2] ).toFixed(3);\n      innerhtml+=\"<tr class=\'cleave_row\' data-seq=\"+i+\">\";\n      innerhtml+=\"<td>\"+(i+1)+\"</td>\";\n      innerhtml+=\"<td>\"+la+\"</td>\";\n      innerhtml+=\"<td>\"+lb+\"</td>\";\n      innerhtml+=\"<td>\"+lc+\"</td>\";\n      innerhtml+=\"<td>\"+(b.angles.alpha).toFixed(3)+\"</td>\";\n      innerhtml+=\"<td>\"+(b.angles.beta).toFixed(3)+\"</td>\";\n      innerhtml+=\"<td>\"+(b.angles.gamma).toFixed(3)+\"</td>\";\n      innerhtml+=\"</tr>\";\n    }\n    target.html(innerhtml);\n    target.find(\"tr\").unbind();\n    target.find(\"tr\").click(function(){\n      var seq = $(this).data(\"seq\")*1;\n      var cb = basisList[seq];\n      showStructure(cb.basis,cleave_orgStructure,{\n        hkl:[h,k,l]\n      }\n                   );\n    }\n                           );\n  };\n  function merge_ok() {\n    let idx1 =$(\".merge_based\").find(\"option:selected\").val();\n    let idx2 = $(\".merge_attached\").find(\"option:selected\").val();\n    let tplane = $(\".merge_plane\").find(\"option:selected\").val();\n    let order = $(\".merge_order\").find(\"option:selected\").val();\n    let space = $(\".merge_space\").val();\n    let clone = [\n      $(\".merge_axis[data-axis=x]\").prop(\"checked\"),\n      $(\".merge_axis[data-axis=y]\").prop(\"checked\"),\n      $(\".merge_axis[data-axis=z]\").prop(\"checked\"),\n    ]\n    if (vla.strlist[idx1] === undefined) {\n      alert(\"Based Structure doesn\'t exist.\");\n      return;\n    }\n    if (vla.strlist[idx2] === undefined) {\n      alert(\"Attached Structure doesn\'t exist.\");\n      return;\n    }\n    if (tplane !== \"XY\" && tplane !== \"XZ\" && tplane !== \"YZ\") {\n      alert(\"Wrong plane.\");\n      return;\n    }\n    if (order !== \"or-fixed-added\" && order !== \"or-added-fixed\") {\n      alert(\"Wrong order.\");\n      return;\n    }\n    if (space < 0 || Number.isNaN(space * 1)) {\n      alert(\"Space must be a number over 0.\");\n      return;\n    }\n    vla.Manipulate.merge({\n      \"idx1\": idx1,\n      \"idx2\": idx2,\n      \"tplane\": tplane,\n      \"order\": order,\n      \"space\": space,\n      \"clone\": clone\n    }\n                        )\n  }\n  function bind_manipulate_key(){\n    $(document).bind(\"keyup\",function(e){\n      switch(e.keyCode){\n        case 81: // q\n          vla.manipulateAtom.rotate({\n            direction:\"vz\",step:-15\n          }\n                                   );\n          break;\n        case 69: // e\n          vla.manipulateAtom.rotate({\n            direction:\"vz\",step:15\n          }\n                                   );\n          break;\n        case 87: // w\n          vla.manipulateAtom.move({\n            direction:\"vy\",step:1\n          }\n                                 );\n          break;\n        case 65: //a\n          vla.manipulateAtom.move({\n            direction:\"vx\",step:-1\n          }\n                                 );\n          break;\n        case 68: // d\n          vla.manipulateAtom.move({\n            direction:\"vx\",step:1\n          }\n                                 );\n          break;\n        case 83: // s\n          vla.manipulateAtom.move({\n            direction:\"vy\",step:-1\n          }\n                                 );\n          break;\n      }\n      console.log(e.keyCode);\n    }\n                    );\n  }\n  function pTableSelector(option){\n    if(option===undefined){\n      option = {\n      };\n    }\n    var that = this;\n    that.option = option;\n    that.selectedElements = [];\n    that.highlightedElements = [];\n    that.ptFilters = []\n    that.openwin = function(){\n      $(\'.ptWindow\').remove();\n      $(document.body).append(\"<div class=ptWindow><div class=ptWrapper></div></div>\");\n      var ih=\"\";\n      ih+=\"<div style=\'display:table-row\'>\";\n      ih+=\"<div class=form-inline style=\'text-align:center;padding:10px 5px;\'>\";\n      ih+=\"<div class=form-group>\";\n      ih+=\"<select class=\'form-control pt-property-filter pt-property-filter-type\' style=\'width:100px;\'>\";\n      ih+=\"<option data-valtype=numeric value=no>No.</option>\";\n      ih+=\"<option data-valtype=numeric value=radius>Radius</option>\";\n      ih+=\"<option data-valtype=numeric value=ie>Ionization Energy</option>\";\n      ih+=\"<option data-valtype=array value=oxi_n>Oxidation Number</option>\";\n      ih+=\"</select>\";\n      ih+=\"<select class=\'form-control pt-property-filter pt-property-filter-cond\' style=\'width:100px;\'>\";\n      ih+=\"<option value=lt><</option>\";\n      ih+=\"<option value=eq>=</option>\";\n      ih+=\"<option value=gt>></option>\";\n      ih+=\"</select>\";\n      ih+=\"<input type=text placeholder=\'Search (1.234, Co, Ni, ...)\' class=\'form-control pt-property-filter pt-property-filter-value\' style=\'margin-right:2px;\'>\";\n      ih+=\"<button class=\'btn btn-success pt-filter-add\'>Add Filter</button>\";\n      ih+=\"</div>\";\n      ih+=\"</div>\";\n      ih+=\"</div>\";\n      ih+=\"<div style=\'display:table-row;\'><div class=pt-filter-list style=\'padding:12px 5px;height:50px;\'></div></div>\";\n      ih+=\"<div style=\'display:table-row;\'><div id=pTable></div></div>\";\n      ih+=\"<div style=\'text-align:right;padding:10px 0px\'>\";\n      ih+=\"<button class=\'btn btn-success pt-filter-select-highlighted\' >Select Highlighted Elements</button>\";\n      ih+=\"<button class=\'btn btn-success pt-filter-done\' style=\'margin-left:3px;\'>Done</button>\";\n      ih+=\"</div>\";\n      // div-7\n      $(\'.ptWrapper\').append(ih);\n      that.fillContents();\n      $(\'.pt-filter-done\').click(function(){\n        if(option.callback){\n          option.callback();\n        }\n        $(\'.ptWindow\').remove();\n      }\n                                );\n      $(\'.ptWrapper\').find(\".pt-element\").click(function(){\n        var el = $(this).data(\'element-name\');\n        if(el === undefined) return false;\n        if(option.multi!==true){\n          that.selectedElements.push(el);\n          if(option.callback){\n            option.callback();\n          }\n          $(\'.ptWindow\').remove();\n          return true;\n        }\n        if( (_idx = that.selectedElements.indexOf(el))<0){\n          that.selectedElements.push(el);\n          that.highlightSelected();\n          that.checkFilter();\n        }\n        else{\n          that.selectedElements.splice(_idx,1);\n          that.highlightSelected();\n          that.checkFilter();\n        }\n      }\n                                               );\n      $(\'.pt-filter-select-highlighted\').click(function(){\n        that.selectedElements = that.highlightedElements.slice(0);\n        that.highlightSelected();\n      }\n                                              );\n      $(\'.pt-property-filter-type\').change(function(){\n        var ih = \"\";\n        switch($(\'.pt-property-filter-type option:checked\').data(\"valtype\")){\n          case \"numeric\":\n            ih+=\"<option value=lt><</option>\";\n            ih+=\"<option value=eq>=</option>\";\n            ih+=\"<option value=gt>></option>\";\n            break;\n          case \"array\":\n            ih+=\"<option value=contain>??/option>\";\n            break;\n        }\n        $(\'.pt-property-filter-cond\').html(ih);\n      }\n                                          );\n      $(\'.ptWrapper\').find(\".pt-property-filter\").change(function(){\n        that.checkFilter();\n      }\n                                                        );\n      $(\'.ptWrapper\').find(\".pt-filter-add\").click(function(){\n        that.addFilter();\n      }\n                                                  );\n      if(option.multi===true && option.selectedAtomList.length>0 ){\n        that.selectedElements=option.selectedAtomList.slice(0);\n        that.highlightSelected();\n      }\n      //changed end\n    }\n    that.highlightSelected = function(){\n      $(\'.ptWrapper\').find(\'.pt-element\').removeClass(\'pt-filter-match\');\n      $(\'.ptWrapper\').find(\'.pt-element\').removeClass(\'pt-selected\');\n      for(var i=0;i<that.selectedElements.length;i++){\n        $(\'.ptWrapper\').find(\'.pt-element.pt-element-name-\'+that.selectedElements[i]).addClass(\'pt-selected\');\n      }\n    }\n    that.fillContents = function(){\n      var _elements = objClone(AtomParam);\n      //create empty table\n      var ngroups = 18;\n      var nperiods = 8;\n      var ptdom = $(\'#pTable\');\n      var ih = \"\";\n      for(var i=0;i<nperiods;i++){\n        ih=\"<div class=\'ptrow pt-period-\"+(i+1)+\"\'>\";\n        for(var j=0;j<ngroups;j++){\n          ih+=\"<div class=\'ptitem pt-group-\"+(j+1)+\"\'>\";\n          ih+=\"<div class=\'pt-element\'>\";\n          ih+=\"<div class=\'pt-property\'></div>\";\n          ih+=\"<div class=\'pt-element-name\'></div>\";\n          ih+=\"</div>\";\n          ih+=\"</div>\";\n        }\n        ih+=\"</div>\";\n        ptdom.append(ih);\n      }\n      //Lan\n      ih=\"<div class=\'ptrow pt-period-6\'>\";\n      ih+=\"<div class=\'ptitem pt-group-53 pt-atom-blank\'></div>\";\n      ih+=\"<div class=\'ptitem pt-group-53 pt-atom-blank\'></div>\";\n      for(var j=56;j<71;j++){\n        ih+=\"<div class=\'ptitem pt-group-53 pt-atom-no-\"+(j+1)+\"\'>\";\n        ih+=\"<div class=\'pt-element\'>\";\n        ih+=\"<div class=\'pt-property\'></div>\";\n        ih+=\"<div class=\'pt-element-name\'></div>\";\n        ih+=\"</div>\";\n        ih+=\"</div>\";\n      }\n      ih+=\"</div>\";\n      ptdom.append(ih);\n      ih=\"<div class=\'ptrow pt-period-6\'>\";\n      ih+=\"<div class=\'ptitem pt-group-53 pt-atom-blank\'></div>\";\n      ih+=\"<div class=\'ptitem pt-group-53 pt-atom-blank\'></div>\";\n      for(var j=88;j<98;j++){\n        ih+=\"<div class=\'ptitem pt-group-53 pt-atom-no-\"+(j+1)+\"\'>\";\n        ih+=\"<div class=\'pt-element\'>\";\n        ih+=\"<div class=\'pt-property\'></div>\";\n        ih+=\"<div class=\'pt-element-name\'></div>\";\n        ih+=\"</div>\";\n        ih+=\"</div>\";\n      }\n      ih+=\"</div>\";\n      ptdom.append(ih);\n      var d,t,p,g,n;\n      for(var el in _elements){\n        d = _elements[el];\n        g = d.group;\n        p = d.period;\n        n = d.no;\n        if(g == 53){\n          t = $(\'.pt-atom-no-\'+n).find(\".pt-element\");\n        }\n        else if(g==63){\n          t = $(\'.pt-atom-no-\'+n).find(\".pt-element\");\n        }\n        else{\n          t = $(\'.pt-period-\'+p).find(\".pt-group-\"+g).find(\".pt-element\");\n        }\n        t.addClass(\"pt-element-name-\"+el);\n        t.data(\"element-name\",el);\n        t.parent().addClass(\"pt-atom-no-\"+n);\n        t.addClass(\"ptOccupied\");\n        t.find(\".pt-element-name\").html(el);\n        t.find(\".pt-property\").html(n);\n      }\n    }\n    that.addFilter = function(){\n      var prop = $(\'.ptWrapper .pt-property-filter-type\').val();\n      var cond = $(\'.ptWrapper .pt-property-filter-cond\').val();\n      var val = $(\'.ptWrapper .pt-property-filter-value\').val();\n      that.ptFilters.push({\n        prop:prop,\n        cond:cond,\n        val:val\n      }\n                         );\n      that.showFilterList();\n    }\n    that.showFilterList = function(){\n      var target = $(\'.pt-filter-list\');\n      target.empty();\n      var ih,f;\n      for(var i=0;i<that.ptFilters.length;i++){\n        f = that.ptFilters[i];\n        ih = \"<button class=\'pt-filter-del\' data-filter-idx=\"+i+\">\";\n        ih+= f[\'prop\'];\n        switch(f[\'cond\']){\n          case \"lt\" : ih+=\" Less than \";\n            break;\n          case \"gt\" : ih+=\" Greater than \";\n            break;\n          case \"contain\" : ih+=\" Contains \";\n            break;\n        }\n        ih+= f[\'val\'];\n        ih+=\"</button>\";\n        target.append(ih);\n      }\n      $(\'.pt-filter-del\').unbind();\n      $(\'.pt-filter-del\').click(function(){\n        var idx = $(this).data(\"filter-idx\");\n        that.delFilter(idx);\n      }\n                               );\n      that.checkFilter();\n    }\n    that.delFilter = function(idx){\n      that.ptFilters.splice(idx,1);\n      that.showFilterList();\n    }\n    that.checkFilter = function(){\n      that.highlightedElements = [];\n      var d,g,p,n,skipFilter=false,v,filterPassed = false;;\n      var prop = $(\'.ptWrapper .pt-property-filter-type\').val();\n      var cond = $(\'.ptWrapper .pt-property-filter-cond\').val();\n      var val = $(\'.ptWrapper .pt-property-filter-value\').val();\n      if(val==\"\") skipFilter = true;\n      if(isNaN(val*1)){\n        val = AtomParam[val][prop];\n      }\n      else{\n        val*=1;\n      }\n      console.log(val,skipFilter);\n      var _elements = objClone(AtomParam);\n      $(\'.ptitem .pt-element\').removeClass(\"pt-filter-match\");\n      for(var el in _elements){\n        if(el == \"X\") continue;\n        var npassed = that.ptFilters.length+1;\n        d = _elements[el];\n        g = d.group;\n        p = d.period;\n        n = d.no;\n        v = d[prop];\n        t = $(\'.pt-atom-no-\'+n).find(\".pt-element\");\n        if(!skipFilter){\n          filterPassed = true;;\n          switch(cond){\n            case \"lt\":\n              if( v >= val ){\n                filterPassed = false;\n                npassed--;\n              }\n              break;\n            case \"gt\":\n              if( v <= val ){\n                filterPassed = false;\n                npassed--;\n              }\n              break;\n            case \"contain\":\n              console.log(v,el);\n              if( v.indexOf(val) < 0){\n                filterPassed = false;\n              }\n              break;\n          }\n          // Current Activated Filter\n          var _val, _cond, _prop, _v;\n          for(var i=0;i<that.ptFilters.length;i++){\n            _prop = that.ptFilters[i].prop;\n            _val = that.ptFilters[i].val;\n            if(isNaN(_val*1)){\n              _val = AtomParam[_val][_prop];\n            }\n            else{\n              _val*=1;\n            }\n            _cond = that.ptFilters[i].cond;\n            _v = d[_prop];\n            switch(_cond){\n              case \"lt\":\n                if( _v >= _val ){\n                  filterPassed = false;\n                  npassed--;\n                }\n                break;\n              case \"gt\":\n                if( _v <= _val ){\n                  filterPassed = false;\n                  npassed--;\n                }\n                break;\n              case \"contain\":\n                if( _v.indexOf(_val) < 0){\n                  filterPassed = false;\n                }\n                break;\n            }\n            // Existing Filters\n          }\n          if(filterPassed){\n            that.highlightedElements.push(el);\n            t.addClass(\"pt-filter-match\");\n            t.css(\"opacity\",1);\n          }\n          else{\n            t.css(\"opacity\",(npassed/(that.ptFilters.length+1)+0.1));\n          }\n        }\n        if(typeof(v) == \"object\") v=v[0];\n        if(v*1==v){\n          v=Math.round(100*v)/100;\n          t.find(\".pt-property\").html(v);\n        }\n        else{\n          t.find(\".pt-property\").html(\"-\");\n        }\n      }\n    }\n  }\n  function ptable_select(selector,args){\n    if(args === undefined){\n      args = {\n      };\n    }\n    var cbfn=function(){\n      if(vlp.selectedElements.length==0){\n        alert(\"No elements selected\");\n        $(selector).val(\"\");\n      }\n      else{\n        if(args.multi===true){\n          $(selector).val(vlp.selectedElements.join(\",\"));\n        }\n        else{\n          $(selector).val(vlp.selectedElements[0]);\n        }\n      }\n    };\n    if(args.multi===true){\n      var tmp = $(selector).val();\n      if(tmp.length>0){\n        var selectedAtomList = tmp.split(\",\");\n      }\n      else{\n        var selectedAtomList = [];\n      }\n    }\n    var vlp = new pTableSelector({\n      callback:cbfn,multi:args.multi,selectedAtomList:selectedAtomList\n    }\n                                );\n    vlp.openwin();\n  }\n  function set_add_type(type){\n    $(\'.ms_add_type\').css(\"opacity\",0.5);\n    $(\'.ms_add_type.ms_add_\'+type).css(\"opacity\",1);\n    $(\'.ms_add_type_wrapper\').hide();\n    $(\'.ms_add_\'+type+\'_input_wrapper\').show();\n  }\n  function select_manipulator(rel){\n    var atomsneeded_wrapper = [\'rotate\', \'change\', \'ht\', \'edit\'];\n    set_add_type(\"atom\");\n    $(\'.manipulator_wrapper\').find(\'.manipulator_input\').val(\"\");\n    $(\'.manipulator_wrapper\').hide();\n    if( rel ){\n      if(atomsneeded_wrapper.indexOf(rel) != -1 && vla.IO.selectedAtoms.length == 0){\n        alert(\'Please select the target atom first.\');\n        return false;\n      }\n      $(\'hr\').show();\n      if(rel !== \'edit\'){\n        $(\'.manipulator_wrapper_\'+rel).show();\n        $(\'.manipulator-icon\').removeClass(\"active\");\n        $(\".manipulator-icon-\"+rel).addClass(\"active\");\n        console.log(this);\n        if(rel == \"sphere\"){\n          $(\".sphere_select_org_x\").val((vla.Structure.a[0]+vla.Structure.b[0]+vla.Structure.c[0])/2);\n          $(\".sphere_select_org_y\").val((vla.Structure.a[1]+vla.Structure.b[1]+vla.Structure.c[1])/2);\n          $(\".sphere_select_org_z\").val((vla.Structure.a[2]+vla.Structure.b[2]+vla.Structure.c[2])/2);\n        }\n        else if(rel===\"merge\"){\n          let merge_based=$(\".merge_based\");\n          let merge_attached=$(\".merge_attached\");\n          merge_based.empty();\n          merge_attached.empty();\n          for(let i=0 ; i<vla.strlist.length ; i++){\n            merge_based.append(\"<option value=\"+i+\">\"+vla.strlist[i].name+\"</option>\");\n            merge_attached.append(\"<option value=\"+i+\">\"+vla.strlist[i].name+\"</option>\");\n          }\n        }\n      }\n      else {\n        vla.openwin.Manipulate.Edit();\n      }\n    }\n  }\n  function draw_molecule(){\n    MolSketcher.show();\n  }\n  function isnum(c)\n  {\n    return c*1==c;\n  }\n  $(\'#draw_molecule\').click(function(){\n    alert(Alert);\n  })\n</script>','2020-05-04 02:26:44',0,0,1),(8,'sample/StructureBuilder','sample_structure_builder','<div style=\"overflow: hidden;\">\n  <div style=\"width: 66.66%; float: left;\">\n    <div class=\"visualizer_wrapper\" style=\"height:500px;\">\n      {{kCMS|VLATOMS|vla|widht:500,height:500}}\n    </div>\n  </div>\n  <div style=\"width: 33.33%; float: left;\">\n    <div>{{kCMS|PAGE|sample_mainpulator}}\n    </div>\n  </div>\n</div>','2020-05-04 03:03:45',0,0,1),(9,'sample/Manipulator/CrystalBuilder(vla)','sample_crystalbuilder','<style>\n  .cb_coord_td{\n    padding:0.75rem 0.25rem !important;\n  }\n</style>\n<script>\n  VLatoms.CrystalBuilder = function(sourceObj) {\n    var that = this;\n    that.construct = function() {\n      that.space_group=[\'P1\',\'P-1\',\'P2\',\'P21\',\'C2\',\'Pm\',\'Pc\',\'Cm\',\'Cc\',\'P2/m\',\'P21/m\',\'C2/m\',\'P2/c\',\'P21/c\',\'C2/c\',\'P222\',\'P2221\',\'P21212\',\'P212121\',\'C2221\',\'C222\',\'F222\',\'I222\',\'I212121\',\'Pmm2\',\'Pmc21\',\'Pcc2\',\'Pma2\',\'Pca21\',\'Pnc2\',\'Pmn21\',\'Pba2\',\'Pna21\',\'Pnn2\',\'Cmm2\',\'Cmc21\',\'Ccc2\',\'Amm2\',\'Aem2\',\'Ama2\',\'Aea2\',\'Fmm2\',\'Fdd2\',\'Imm2\',\'Iba2\',\'Ima2\',\'Pmmm\',\'Pnnn\',\'Pccm\',\'Pban\',\'Pmma\',\'Pnna\',\'Pmna\',\'Pcca\',\'Pbam\',\'Pccn\',\'Pbcm\',\'Pnnm\',\'Pmmn\',\'Pbcn\',\'Pbca\',\'Pnma\',\'Cmcm\',\'Cmce\',\'Cmmm\',\'Cccm\',\'Cmme\',\'Ccce\',\'Fmmm\',\'Fddd\',\'Immm\',\'Ibam\',\'Ibca\',\'Imma\',\'P4\',\'P41\',\'P42\',\'P43\',\'I4\',\'I41\',\'P-4\',\'I-4\',\'P4/m\',\'P42/m\',\'P4/n\',\'P42/n\',\'I4/m\',\'I41/a\',\'P422\',\'P4212\',\'P4122\',\'P41212\',\'P4222\',\'P42212\',\'P4322\',\'P43212\',\'I422\',\'I4122\',\'P4mm\',\'P4bm\',\'P42cm\',\'P42nm\',\'P4cc\',\'P4nc\',\'P42mc\',\'P42bc\',\'I4mm\',\'I4cm\',\'I41md\',\'I41cd\',\'P-42m\',\'P-42c\',\'P-421m\',\'P-421c\',\'P-4m2\',\'P-4c2\',\'P-4b2\',\'P-4n2\',\'I-4m2\',\'I-4c2\',\'I-42m\',\'I-42d\',\'P4/mmm\',\'P4/mcc\',\'P4/nbm\',\'P4/nnc\',\'P4/mbm\',\'P4/mnc\',\'P4/nmm\',\'P4/ncc\',\'P42/mmc\',\'P42/mcm\',\'P42/nbc\',\'P42/nnm\',\'P42/mbc\',\'P42/mnm\',\'P42/nmc\',\'P42/ncm\',\'I4/mmm\',\'I4/mcm\',\'I41/amd\',\'I41/acd\',\'P3\',\'P31\',\'P32\',\'R3\',\'P-3\',\'R-3\',\'P312\',\'P321\',\'P3112\',\'P3121\',\'P3212\',\'P3221\',\'R32\',\'P3m1\',\'P31m\',\'P3c1\',\'P31c\',\'R3m\',\'R3c\',\'P-31m\',\'P-31c\',\'P-3m1\',\'P-3c1\',\'R-3m\',\'R-3c\',\'P6\',\'P61\',\'P65\',\'P62\',\'P64\',\'P63\',\'P-6\',\'P6/m\',\'P63/m\',\'P622\',\'P6122\',\'P6522\',\'P6222\',\'P6422\',\'P6322\',\'P6mm\',\'P6cc\',\'P63cm\',\'P63mc\',\'P-6m2\',\'P-6c2\',\'P-62m\',\'P-62c\',\'P6/mmm\',\'P6/mcc\',\'P63/mcm\',\'P63/mmc\',\'P23\',\'F23\',\'I23\',\'P213\',\'I213\',\'Pm-3\',\'Pn-3\',\'Fm-3\',\'Fd-3\',\'Im-3\',\'Pa-3\',\'Ia-3\',\'P432\',\'P4232\',\'F432\',\'F4132\',\'I432\',\'P4332\',\'P4132\',\'I4132\',\'P-43m\',\'F-43m\',\'I-43m\',\'P-43n\',\'F-43c\',\'I-43d\',\'Pm-3m\',\'Pn-3n\',\'Pm-3n\',\'Pn-3m\',\'Fm-3m\',\'Fm-3c\',\'Fd-3m\',\'Fd-3c\',\'Im-3m\',\'Ia-3d\'];\n      var sel_sg = $(\'.CB_sg\');\n      for (var i = 0; i < that.space_group.length; i++) {\n        sel_sg.append(\"<option value=\" + (i + 1) + \">\" + (i + 1) + \" \" + that.space_group[i] + \"</option>\");\n      }\n      that.natoms = 0;\n      that.addatom = function(){\n        var target = $(\'.CB_atoms tbody\');\n        var innerhtml = \"<tr class=\'CB_atoms CB_atom_\" + that.natoms + \"\' data-num=\"+that.natoms+\">\";\n        innerhtml += \"<td>\" + (that.natoms + 1) + \"</td>\";\n        innerhtml += \"<td class=cb_coord_td><input class=\'CB_pos form-control el\' style=\'width:60px;\'></td>\";\n        innerhtml += \"<td class=cb_coord_td><input class=\'CB_pos form-control x\' style=\'width:60px;\'></td>\";\n        innerhtml += \"<td class=cb_coord_td><input class=\'CB_pos form-control y\' style=\'width:60px;\'></td>\";\n        innerhtml += \"<td class=cb_coord_td><input class=\'CB_pos form-control z\' style=\'width:60px;\'></td>\";\n        innerhtml += \"</tr>\";\n        target.append(innerhtml);\n        that.natoms++;\n      }\n      that.delatom = function() {\n        var target = $(\'.CB_atoms tbody\');\n        target.children(\".CB_atom_\" + (that.natoms - 1)).remove();\n        that.natoms--;\n      }\n      // Buttons\n      $(\'.CB_ok\').unbind();\n      $(\'.CB_add\').unbind();\n      $(\'.CB_add\').click(function() {\n        that.addatom();\n      });\n      $(\'.CB_ok\').click(function() {\n        var sg= $(\".CB_sg\").val()*1;\n        var alpha = $(\".CB_al\").val()*1;\n        var beta = $(\".CB_be\").val()*1;\n        var gamma = $(\".CB_gam\").val()*1;\n        var a = $(\".CB_a\").val()*1;\n        var b = $(\".CB_b\").val()*1;\n        var c = $(\".CB_c\").val()*1;\n        var element = [];\n        var coord = [];\n        for(var i=0 ; i<that.natoms ; i++){\n          var trs = $(\".CB_atoms[data-num=\'\"+i+\"\']\");\n          element.push(el = trs.find(\".CB_pos.el\").val());\n          var x = trs.find(\".CB_pos.x\").val();\n          var y = trs.find(\".CB_pos.y\").val();\n          var z = trs.find(\".CB_pos.z\").val();\n          coord.push([x*1, y*1, z*1])\n        }\n        kCms.callPlugin(\"sample_crystal_builder\",{\n          \"sg\":sg,\n          \"alpha\":alpha,\n          \"beta\":beta,\n          \"gamma\":gamma,\n          \"a\":a,\n          \"b\":b,\n          \"c\":c,\n          \"element\":element,\n          \"coord\":coord\n        },function(ret){\n          if(ret[\"error\"].trim() === \"\" && ret[\"output\"] !== \"ERROR\"){\n            vla.Structure=VLatoms.Utils.Structure.poscarToVLatoms(ret[\"output\"]);\n            vla.update.atomsChanged=true;\n            vla.update.bondsChanged=true;\n            vla.setOptimalCamPosition();\n          }else{\n            alert(\"Failed to build a structure\")\n          }\n        });\n      });\n    }\n    that.construct();\n  }\n</script>\n\n<table class=\'table crystal_builder\'>\n  <tr>\n    <td colspan=\"2\"><label>Cell</label></td>\n  </tr>\n  <tr>\n    <td>Space Group</td>\n    <td>\n      <select class=\"CB_sg form-control\">\n      </select>\n    </td>\n  </tr>\n  <tr>\n    <td>a, b, c (Å)</td>\n    <td>\n      <div class=\"form-inline\">\n        <input class=\"CB_a form-control\" style=\'width:75px;\' type=\"text\" value=\"3\">\n        <input class=\"CB_b form-control\" style=\'width:75px;\' type=\"text\" value=\"3\">\n        <input class=\"CB_c form-control\" style=\'width:75px;\' type=\"text\" value=\"3\">\n      </div>\n    </td>\n  </tr>\n  <tr>\n    <td>α, β, γ (°)</td>\n    <td>\n      <div class=\"form-inline\">\n        <input class=\"CB_al form-control\" style=\'width:75px;\' type=\"text\" value=\"90\">\n        <input class=\"CB_be form-control\" style=\'width:75px;\' type=\"text\" value=\"90\">\n        <input class=\"CB_gam form-control\" style=\'width:75px;\' type=\"text\" value=\"90\">\n      </div>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">\n      <label>Atoms</label>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">\n      <div>\n        <table class=\'CB_atoms table\'>\n          <thead>\n            <tr>\n              <td>No.</td>\n              <td>El.</td>\n              <td>x</td>\n              <td>y</td>\n              <td>z</td>\n            </tr>\n          </thead>\n          <tbody></tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"5\">\n                <span class=\"CB_add\">\n                  <a href=\"javascript:;\">Add</a>\n                </span>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" style=\'text-align:right;\'>\n      <button class=\'CB_ok btn btn-info\'>Generate</button>\n    </td>\n  </tr>\n</table>\n<script>\n  var vla;\n  $(document).ready(function(){\n    VLatoms.CrystalBuilder(vla);\n  });\n</script>','2020-03-17 04:26:58',0,0,1);
/*!40000 ALTER TABLE `vcms_pages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `vcms_plugin`
--

DROP TABLE IF EXISTS `vcms_plugin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vcms_plugin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` text NOT NULL,
  `role` varchar(255) NOT NULL,
  `type` varchar(255) NOT NULL,
  `script` longtext NOT NULL,
  `includes` longtext NOT NULL DEFAULT '',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `alias` varchar(255) DEFAULT NULL,
  `author` int(11) NOT NULL,
  `ispublic` tinyint(4) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `vcms_plugin`
--

LOCK TABLES `vcms_plugin` WRITE;
/*!40000 ALTER TABLE `vcms_plugin` DISABLE KEYS */;
INSERT INTO `vcms_plugin` VALUES (1,'sample/Hello SimPL','calculator','python2','print json.dumps(\"Hello \"+kCms[\'input\'][\'name\'])','','2019-08-16 03:34:40','2019-08-16 03:34:40','hellosimpl',1,0),(2,'sample/QE Job Submit Example','calculator','python2','f=open(\"input.pw.x\",\"w\");\nf.write(kCms[\'input\'][\'input.pw.x\'])\nf.close()\nfor element in kCms[\'input\'][\'elements\']:\n  f=open(element+\".UPF\",\"w\");\n  f.write(getRepo(element+\".UPF\"))\n  f.close()\n\nqe = getSolver(1)\nsolverExec = qe[\'path\'] + \" \" + qe[\"execcmd\"]\nqueueParams = {\'mpi\':True,\'solverExec\':solverExec,\'nnodes\':2,\'ppn\':4}\nqid = qsub(queueParams)\nprint(qid)','','2019-08-16 03:43:27','2019-08-16 03:43:27','simpl_ex_jobsubmit',1,0),(3,'sample/built-in/saveJob Example','calculator','python2','\"\"\"\nsaveJob : Save Data to database\n  args : object {\n    qinfo : , # json parsed queue Information\n    input : json, # json parsed Job Input\n    output : json, # json parsed Job output\n    name : string, # Job Name\n  }\n  qinfo should have (integer) id field\n  i.e,\n  qinfo : json.dumps({\"id\" : 12345})\n\"\"\"    \ndbid = saveJob({\n	\"qinfo\" : json.dumps({\"id\":12345}),\n    \"input\" : json.dumps({\"inputargs\":\"Hello World\"}),\n    \"output\" : json.dumps({})\n});\nprint json.dumps(dbid)','','2019-08-16 03:44:23','2019-08-16 03:44:23','simpl_ex_savejob',1,0),(4,'sample/built-in/Update Job Status','calculator','python2','import xmltodict\n\njoblist = json.loads(getJobs({}))\nfor job in joblist:\n  jobid = job[\'id\']\n  try:\n    qinfo = json.loads(job[\'qinfo\'])\n    qstat_ret = qstat(qinfo[\'id\'])\n    if qstat_ret == \"\":\n      if (os.path.isfile(job[\'jobdir\']+\"/finished\")) :\n        qinfo[\'status\'] = \"F\"\n      else :\n        qinfo[\'status\'] = \"D\"\n    else :\n      qjob = xmltodict.parse(qstat_ret)[\'Data\'][\'Job\']\n      qinfo[\'status\']=qjob[\'job_state\']\n      if qinfo[\'status\'] == \"C\":\n        if (os.path.isfile(job[\'jobdir\']+\"/finished\")) :\n          qinfo[\'status\'] = \"F\"\n        else :\n          qinfo[\'status\'] = \"D\"\n    saveJob({\"id\":jobid,\"pluginId\":job[\'pluginId\'],\"qinfo\":json.dumps(qinfo),\"jobdir\":job[\'jobdir\']})\n  except:\n    pass','','2019-08-16 03:44:50','2019-08-16 03:44:50','updateJobStat',1,0),(5,'sample/built-in/getMyInfo Example','calculator','python2','ret=getMyInfo()\n\nprint(json.dumps(ret))','','2019-08-16 03:45:14','2019-08-16 04:44:03','simpl_ex_getmyinfo',1,0),(6,'sample/built-in/getJobs Example','calculator','python2','args={\n### The below keys are used to search for data having the same value as the input value of the column with that name.\n#  \"id\":[value],\n#  \"parent\":[value],\n#  \"project\":[value],\n#  \"owner\":[value],\n#  \"type\":[value],\n#  \"qinfo\":[value],\n#  \"jobdir\":[value],\n#  \"status\":[value],\n#  \"pluginId\":[value],\n#  \"jobBefore\":[value],\n#  \"jobNext\":[value],\n#  \"input\":[value],\n#  \"output\":[value],\n#  \"name\":[value],\n#  \"created_at\":[value],\n#  \"updated_at\":[value],\n#######################################################################\n\n### \"criteria\" is an array of search condition strings. Each string is used as a conditional expression when the query is executed.\n### You can access json data(input,output,jobBefore,jobNext,qinfo) through \"json_value(column_name, \'$.key(depth1).key(depth2)\') >= 3\".\n#  \"criteria\": [ \"json_value(input, \'$.value.time\') > 10\", \"id > 5\" ],\n#######################################################################\n\n### \"cols\" is an array of columns to return. if \"cols\" doesn\'t exist, all columns are returned.\n#  \"cols\":[\"id\",\"parent\",\"project\",\"owner\",\"type\",\"qinfo\",\"jobdir\",\"status\",\"pluginId\",\"jobBefore\",\"jobNext\",\"input\",\"output\",\"name\",\"created_at\",\"updated_at\"],\n#######################################################################\n\n### \"order\" specifies how the data is sorted.\n#  \"order\": [ \"column name\" , \"asc\" or \"desc\" ],\n#######################################################################\n\n### \"limit\" key determines the range and number of data.\n#  \"limit\": [ offset, number ],\n#######################################################################\n}\n\nret=getJobs(args)\n\nprint(json.dumps(ret))','','2019-08-16 03:45:37','2019-08-16 03:45:37','simpl_ex_getjobs',1,0),(7,'sample/built-in/getRepo Example','calculator','python2','###getRepo(\"alias of file in repository for server\")\nret=getRepo(\"repo_sample.txt\")\n\nprint(ret)','','2019-08-16 03:45:59','2019-08-16 03:45:59','simpl_ex_getrepo',1,0),(8,'sample/built-in/callPlugin Example','calculator','python2','###callPlugin(\"plugin alias\", \"input(kCms[\'input\'] in called Plugin)\")\nret=callPlugin(\"hellosimpl\",{\"name\":\"callPlugin Example\"})\n\nprint(ret)','','2019-08-16 03:46:23','2019-08-16 03:46:23','simpl_ex_callplugin',1,0),(9,'sample/built-in/file_get_contents Example','calculator','python2','### file_get_contents can get data from both web and local file.\n### file_get_contents(filename, use_include_path = 0, context = None, offset = -1, maxlen = -1):\n\n### Get data from web (KIFF Reaxff API) \nret=file_get_contents(\"http://nomad.kist.re.kr/kiff/api/v1/reax?elements=C,N&author=Han\")\n\n### Get data from local\n#ret=file_get_contents(\"/etc/php.ini\")\nprint(ret)','','2019-08-16 03:46:51','2019-08-16 03:46:51','simpl_ex_filegetcontents',1,0),(10,'sample/CrystalBuilder','calculator','python3','import pymatgen\n\nsg=int(kCms[\"input\"][\"sg\"])\na=float(kCms[\"input\"][\"a\"])\nb=float(kCms[\"input\"][\"b\"])\nc=float(kCms[\"input\"][\"c\"])\nalpha=float(kCms[\"input\"][\"alpha\"])\nbeta=float(kCms[\"input\"][\"beta\"])\ngamma=float(kCms[\"input\"][\"gamma\"])\nelement=kCms[\"input\"][\"element\"]\ncoord=kCms[\"input\"][\"coord\"]\nlat=pymatgen.core.lattice.Lattice.from_parameters(a,b,c,alpha,beta,gamma)\npymatgen.core.structure.Structure.from_spacegroup(sg,lat,element,coord).to(\"poscar\", \"poscar\")\nif os.path.exists(\"poscar\"):\n  with open(\"poscar\", \"r\") as f:\n    ret=f.read()\nelse:\n  ret=\"ERROR\"\nprint(ret)','','2020-03-16 02:22:03','2020-03-16 19:25:57','sample_crystal_builder',1,0);
/*!40000 ALTER TABLE `vcms_plugin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `vcms_solvers`
--

DROP TABLE IF EXISTS `vcms_solvers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vcms_solvers` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `owner` int(11) NOT NULL,
  `author` varchar(255) NOT NULL,
  `execcmd` text NOT NULL,
  `version` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `path` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `vcms_solvers`
--

LOCK TABLES `vcms_solvers` WRITE;
/*!40000 ALTER TABLE `vcms_solvers` DISABLE KEYS */;
/*!40000 ALTER TABLE `vcms_solvers` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-05-04 14:14:05
